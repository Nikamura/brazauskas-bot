{
  "openapi": "3.0.1",
  "info": {
    "title": "Ombi Api V1",
    "contact": {
      "name": "Jamie Rees",
      "url": "https://www.ombi.io/"
    },
    "version": "v1"
  },
  "paths": {
    "/api/v2/Calendar": {
      "get": {
        "tags": [
          "Calendar"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Core.Models.Search.V2.CalendarViewModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Core.Models.Search.V2.CalendarViewModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Core.Models.Search.V2.CalendarViewModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/CouchPotato/profile": {
      "post": {
        "tags": [
          "CouchPotato"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.CouchPotatoSettings"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.CouchPotatoSettings"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.CouchPotatoSettings"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.CouchPotatoSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Api.CouchPotato.Models.CouchPotatoProfiles"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/CouchPotato/apikey": {
      "post": {
        "tags": [
          "CouchPotato"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.CouchPotatoSettings"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.CouchPotatoSettings"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.CouchPotatoSettings"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.CouchPotatoSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Api.CouchPotato.Models.CouchPotatoApiKey"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/CustomPage": {
      "get": {
        "tags": [
          "CustomPage"
        ],
        "summary": "Gets the Custom Page Settings.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.CustomPageSettings"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "CustomPage"
        ],
        "summary": "Saves the Custom Page Settings.",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.CustomPageSettings"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.CustomPageSettings"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.CustomPageSettings"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.CustomPageSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Emby": {
      "post": {
        "tags": [
          "Emby"
        ],
        "summary": "Signs into the Emby Api",
        "requestBody": {
          "description": "The request.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Settings.Models.External.EmbySettings"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Settings.Models.External.EmbySettings"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Settings.Models.External.EmbySettings"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Settings.Models.External.EmbySettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Settings.Models.External.EmbySettings"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Emby/info": {
      "post": {
        "tags": [
          "Emby"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Settings.Models.External.EmbyServers"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Settings.Models.External.EmbyServers"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Settings.Models.External.EmbyServers"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Settings.Models.External.EmbyServers"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Api.Emby.Models.PublicInfo"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Emby/users": {
      "get": {
        "tags": [
          "Emby"
        ],
        "summary": "Gets the emby users.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Models.External.UsersViewModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Emby/Library": {
      "post": {
        "tags": [
          "Emby"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Settings.Models.External.EmbyServers"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Settings.Models.External.EmbyServers"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Settings.Models.External.EmbyServers"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Settings.Models.External.EmbyServers"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Api.Emby.Models.EmbyItemContainer`1[[Ombi.Api.Emby.Models.Media.MediaFolders, Ombi.Api.Emby, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/Hub/Users": {
      "get": {
        "tags": [
          "Hub"
        ],
        "summary": "Returns the currently connected users in Ombi",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Models.ConnectedUsersViewModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Models.ConnectedUsersViewModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Models.ConnectedUsersViewModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Identity/Users": {
      "get": {
        "tags": [
          "Identity"
        ],
        "summary": "Gets all users.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Core.Models.UI.UserViewModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Identity/dropdown/Users": {
      "get": {
        "tags": [
          "Identity"
        ],
        "summary": "Gets all users for dropdown purposes.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Core.Models.UI.UserViewModelDropdown"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Identity": {
      "get": {
        "tags": [
          "Identity"
        ],
        "summary": "Gets the current logged in user.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.UI.UserViewModel"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Identity"
        ],
        "summary": "Creates the user.",
        "requestBody": {
          "description": "The user.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.UI.UserViewModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.UI.UserViewModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.UI.UserViewModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.UI.UserViewModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Models.Identity.IdentityResult"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Identity"
        ],
        "summary": "Updates the user.",
        "requestBody": {
          "description": "The user.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.UI.UserViewModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.UI.UserViewModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.UI.UserViewModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.UI.UserViewModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Models.Identity.IdentityResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Identity/language": {
      "post": {
        "tags": [
          "Identity"
        ],
        "summary": "Sets the current users language",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Models.Identity.UserLanguage"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Models.Identity.UserLanguage"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Models.Identity.UserLanguage"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Models.Identity.UserLanguage"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Identity/streamingcountry": {
      "get": {
        "tags": [
          "Identity"
        ],
        "summary": "Returns the supported country codes that we have streaming data for",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "Identity"
        ],
        "summary": "Sets the current users country streaming preference",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Models.Identity.CountryStreamingPreference"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Models.Identity.CountryStreamingPreference"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Models.Identity.CountryStreamingPreference"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Models.Identity.CountryStreamingPreference"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Identity/User/{id}": {
      "get": {
        "tags": [
          "Identity"
        ],
        "summary": "Gets the user by the user id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.UI.UserViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Identity/local": {
      "put": {
        "tags": [
          "Identity"
        ],
        "summary": "This is for the local user to change their details.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Models.Identity.UpdateLocalUserModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Models.Identity.UpdateLocalUserModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Models.Identity.UpdateLocalUserModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Models.Identity.UpdateLocalUserModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Models.Identity.IdentityResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Identity/{userId}": {
      "delete": {
        "tags": [
          "Identity"
        ],
        "summary": "Deletes the user.",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The user.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Models.Identity.IdentityResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Identity/claims": {
      "get": {
        "tags": [
          "Identity"
        ],
        "summary": "Gets all available claims in the system.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Core.Models.UI.ClaimCheckboxes"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Identity/welcomeEmail": {
      "post": {
        "tags": [
          "Identity"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.UI.UserViewModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.UI.UserViewModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.UI.UserViewModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.UI.UserViewModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Identity/notificationpreferences": {
      "get": {
        "tags": [
          "Identity"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Store.Entities.UserNotificationPreferences"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Identity/notificationpreferences/{userId}": {
      "get": {
        "tags": [
          "Identity"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Store.Entities.UserNotificationPreferences"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Identity/NotificationPreferences": {
      "post": {
        "tags": [
          "Identity"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Ombi.Models.Identity.AddNotificationPreference"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Ombi.Models.Identity.AddNotificationPreference"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Ombi.Models.Identity.AddNotificationPreference"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Ombi.Models.Identity.AddNotificationPreference"
                }
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Identity/newsletter/unsubscribe/{userId}": {
      "get": {
        "tags": [
          "Identity"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Images/tv/{tvdbid}": {
      "get": {
        "tags": [
          "Images"
        ],
        "parameters": [
          {
            "name": "tvdbid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Images/poster": {
      "get": {
        "tags": [
          "Images"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Images/poster/movie/{movieDbId}": {
      "get": {
        "tags": [
          "Images"
        ],
        "parameters": [
          {
            "name": "movieDbId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Images/poster/tv/{tvdbid}": {
      "get": {
        "tags": [
          "Images"
        ],
        "parameters": [
          {
            "name": "tvdbid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Images/background/movie/{movieDbId}": {
      "get": {
        "tags": [
          "Images"
        ],
        "parameters": [
          {
            "name": "movieDbId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Images/banner/movie/{movieDbId}": {
      "get": {
        "tags": [
          "Images"
        ],
        "parameters": [
          {
            "name": "movieDbId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Images/background/tv/{tvdbid}": {
      "get": {
        "tags": [
          "Images"
        ],
        "parameters": [
          {
            "name": "tvdbid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Images/background": {
      "get": {
        "tags": [
          "Images"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v2/Issues/{position}/{take}/{status}": {
      "get": {
        "tags": [
          "Issues"
        ],
        "parameters": [
          {
            "name": "position",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "take",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "status",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Ombi.Store.Entities.Requests.IssueStatus"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Core.Engine.V2.IssuesSummaryModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Core.Engine.V2.IssuesSummaryModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Core.Engine.V2.IssuesSummaryModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/Issues/details/{providerId}": {
      "get": {
        "tags": [
          "Issues"
        ],
        "parameters": [
          {
            "name": "providerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Engine.V2.IssuesSummaryModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Engine.V2.IssuesSummaryModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Engine.V2.IssuesSummaryModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Issues/categories": {
      "get": {
        "tags": [
          "Issues"
        ],
        "summary": "Get's all categories",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Store.Entities.Requests.IssueCategory"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Issues"
        ],
        "summary": "Creates a new category",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Store.Entities.Requests.IssueCategory"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Store.Entities.Requests.IssueCategory"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Store.Entities.Requests.IssueCategory"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Store.Entities.Requests.IssueCategory"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Issues/categories/{catId}": {
      "delete": {
        "tags": [
          "Issues"
        ],
        "summary": "Deletes a Category",
        "parameters": [
          {
            "name": "catId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Issues": {
      "get": {
        "tags": [
          "Issues"
        ],
        "summary": "Returns all the issues",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Store.Entities.Requests.Issues"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Issues"
        ],
        "summary": "Create Movie Issue",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Store.Entities.Requests.Issues"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Store.Entities.Requests.Issues"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Store.Entities.Requests.Issues"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Store.Entities.Requests.Issues"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Issues/{take}/{skip}/{status}": {
      "get": {
        "tags": [
          "Issues"
        ],
        "summary": "Returns all the issues",
        "parameters": [
          {
            "name": "take",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "skip",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "status",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Ombi.Store.Entities.Requests.IssueStatus"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Store.Entities.Requests.Issues"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Issues/count": {
      "get": {
        "tags": [
          "Issues"
        ],
        "summary": "Returns all the issues count",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Models.IssueCountModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Issues/{id}": {
      "get": {
        "tags": [
          "Issues"
        ],
        "summary": "Returns the issue by Id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Store.Entities.Requests.Issues"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Issues"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Issues/request/{id}": {
      "get": {
        "tags": [
          "Issues"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Issues/provider/{id}": {
      "get": {
        "tags": [
          "Issues"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Issues/{id}/comments": {
      "get": {
        "tags": [
          "Issues"
        ],
        "summary": "Get's all the issue comments by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Models.IssueCommentChatViewModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Issues/comments": {
      "post": {
        "tags": [
          "Issues"
        ],
        "summary": "Adds a comment on an issue",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Models.NewIssueCommentViewModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Models.NewIssueCommentViewModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Models.NewIssueCommentViewModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Models.NewIssueCommentViewModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Store.Entities.Requests.IssueComments"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Issues/comments/{id}": {
      "delete": {
        "tags": [
          "Issues"
        ],
        "summary": "Deletes a comment on a issue",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Issues/status": {
      "post": {
        "tags": [
          "Issues"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Models.IssueStateViewModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Models.IssueStateViewModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Models.IssueStateViewModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Models.IssueStateViewModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Jellyfin": {
      "post": {
        "tags": [
          "Jellyfin"
        ],
        "summary": "Signs into the Jellyfin Api",
        "requestBody": {
          "description": "The request.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Settings.Models.External.JellyfinSettings"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Settings.Models.External.JellyfinSettings"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Settings.Models.External.JellyfinSettings"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Settings.Models.External.JellyfinSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Settings.Models.External.JellyfinSettings"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Jellyfin/info": {
      "post": {
        "tags": [
          "Jellyfin"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Settings.Models.External.JellyfinServers"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Settings.Models.External.JellyfinServers"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Settings.Models.External.JellyfinServers"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Settings.Models.External.JellyfinServers"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Api.Jellyfin.Models.PublicInfo"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Jellyfin/Library": {
      "post": {
        "tags": [
          "Jellyfin"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Settings.Models.External.JellyfinServers"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Settings.Models.External.JellyfinServers"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Settings.Models.External.JellyfinServers"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Settings.Models.External.JellyfinServers"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Api.Jellyfin.Models.JellyfinItemContainer`1[[Ombi.Api.Jellyfin.Models.MediaFolders, Ombi.Api.Jellyfin, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Jellyfin/users": {
      "get": {
        "tags": [
          "Jellyfin"
        ],
        "summary": "Gets the jellyfin users.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Models.External.UsersViewModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Job/update": {
      "post": {
        "tags": [
          "Job"
        ],
        "summary": "Runs the update job",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Job"
        ],
        "summary": "Checks for an update",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Job/plexuserimporter": {
      "post": {
        "tags": [
          "Job"
        ],
        "summary": "Runs the Plex User importer",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Job/embyuserimporter": {
      "post": {
        "tags": [
          "Job"
        ],
        "summary": "Runs the Emby User importer",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Job/jellyfinuserimporter": {
      "post": {
        "tags": [
          "Job"
        ],
        "summary": "Runs the Jellyfin User importer",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Job/plexcontentcacher": {
      "post": {
        "tags": [
          "Job"
        ],
        "summary": "Runs the Plex Content Cacher",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Job/clearmediaserverdata": {
      "post": {
        "tags": [
          "Job"
        ],
        "summary": "Clear out the media server and resync",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Job/plexrecentlyadded": {
      "post": {
        "tags": [
          "Job"
        ],
        "summary": "Runs a smaller version of the content cacher",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Job/embycontentcacher": {
      "post": {
        "tags": [
          "Job"
        ],
        "summary": "Runs the Emby Content Cacher",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Job/embyrecentlyadded": {
      "post": {
        "tags": [
          "Job"
        ],
        "summary": "Runs a smaller version of the content cacher",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Job/jellyfincontentcacher": {
      "post": {
        "tags": [
          "Job"
        ],
        "summary": "Runs the Jellyfin Content Cacher",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Job/arrAvailability": {
      "post": {
        "tags": [
          "Job"
        ],
        "summary": "Runs the Arr Availability Checker",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Job/autodeleterequests": {
      "post": {
        "tags": [
          "Job"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Job/newsletter": {
      "post": {
        "tags": [
          "Job"
        ],
        "summary": "Runs the newsletter",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/LandingPage": {
      "get": {
        "tags": [
          "LandingPage"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Models.MediaSeverAvailibilityViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Lidarr/Profiles": {
      "post": {
        "tags": [
          "Lidarr"
        ],
        "summary": "Gets the Lidarr profiles.",
        "requestBody": {
          "description": "The settings.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.LidarrSettings"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.LidarrSettings"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.LidarrSettings"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.LidarrSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Api.Lidarr.Models.LidarrProfile"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Lidarr"
        ],
        "summary": "Gets the Lidarr profiles using the saved settings\r\n<remarks>The data is cached for an hour</remarks>",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Api.Lidarr.Models.LidarrProfile"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Lidarr/RootFolders": {
      "post": {
        "tags": [
          "Lidarr"
        ],
        "summary": "Gets the Lidarr root folders.",
        "requestBody": {
          "description": "The settings.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.LidarrSettings"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.LidarrSettings"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.LidarrSettings"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.LidarrSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Api.Lidarr.Models.LidarrRootFolder"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Lidarr"
        ],
        "summary": "Gets the Lidarr root folders using the saved settings.\r\n<remarks>The data is cached for an hour</remarks>",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Api.Lidarr.Models.LidarrRootFolder"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Lidarr/Metadata": {
      "post": {
        "tags": [
          "Lidarr"
        ],
        "summary": "Gets the Lidarr metadata profiles.",
        "requestBody": {
          "description": "The settings.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.LidarrSettings"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.LidarrSettings"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.LidarrSettings"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.LidarrSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Api.Lidarr.Models.MetadataProfile"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Logging": {
      "post": {
        "tags": [
          "Logging"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Models.UiLoggingModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Models.UiLoggingModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Models.UiLoggingModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Models.UiLoggingModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/request/music/{count}/{position}/{orderType}/{statusType}/{availabilityType}": {
      "get": {
        "tags": [
          "MusicRequest"
        ],
        "summary": "Gets album requests.",
        "parameters": [
          {
            "name": "count",
            "in": "path",
            "description": "The count of items you want to return.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "position",
            "in": "path",
            "description": "The position.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "orderType",
            "in": "path",
            "description": "The way we want to order.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "statusType",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "availabilityType",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.UI.RequestsViewModel`1[[Ombi.Store.Entities.Requests.AlbumRequest, Ombi.Store, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/request/music/total": {
      "get": {
        "tags": [
          "MusicRequest"
        ],
        "summary": "Gets the total amount of album requests.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/request/music": {
      "get": {
        "tags": [
          "MusicRequest"
        ],
        "summary": "Gets all album requests.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Store.Entities.Requests.AlbumRequest"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "MusicRequest"
        ],
        "summary": "Requests a album.",
        "requestBody": {
          "description": "The album.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.Requests.MusicAlbumRequestViewModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.Requests.MusicAlbumRequestViewModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.Requests.MusicAlbumRequestViewModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.Requests.MusicAlbumRequestViewModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Engine.RequestEngineResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/request/music/search/{searchTerm}": {
      "get": {
        "tags": [
          "MusicRequest"
        ],
        "summary": "Searches for a specific album request",
        "parameters": [
          {
            "name": "searchTerm",
            "in": "path",
            "description": "The search term.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Store.Entities.Requests.AlbumRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/request/music/{requestId}": {
      "delete": {
        "tags": [
          "MusicRequest"
        ],
        "summary": "Deletes the specified album request.",
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "description": "The request identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Engine.RequestEngineResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/request/music/approve": {
      "post": {
        "tags": [
          "MusicRequest"
        ],
        "summary": "Approves the specified album request.",
        "requestBody": {
          "description": "The albums's ID",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.Requests.AlbumUpdateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.Requests.AlbumUpdateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.Requests.AlbumUpdateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.Requests.AlbumUpdateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Engine.RequestEngineResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/request/music/available": {
      "post": {
        "tags": [
          "MusicRequest"
        ],
        "summary": "Set's the specified album as available",
        "requestBody": {
          "description": "The album's ID",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.Requests.AlbumUpdateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.Requests.AlbumUpdateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.Requests.AlbumUpdateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.Requests.AlbumUpdateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Engine.RequestEngineResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/request/music/unavailable": {
      "post": {
        "tags": [
          "MusicRequest"
        ],
        "summary": "Set's the specified album as unavailable",
        "requestBody": {
          "description": "The album's ID",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.Requests.AlbumUpdateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.Requests.AlbumUpdateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.Requests.AlbumUpdateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.Requests.AlbumUpdateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Engine.RequestEngineResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/request/music/deny": {
      "put": {
        "tags": [
          "MusicRequest"
        ],
        "summary": "Denies the specified album request.",
        "requestBody": {
          "description": "The album's ID",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.Requests.DenyAlbumModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.Requests.DenyAlbumModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.Requests.DenyAlbumModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.Requests.DenyAlbumModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Engine.RequestEngineResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/request/music/remaining": {
      "get": {
        "tags": [
          "MusicRequest"
        ],
        "summary": "Gets model containing remaining number of music requests.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.RequestQuotaCountModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Notifications/massemail": {
      "post": {
        "tags": [
          "Notifications"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.MassEmailModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.MassEmailModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.MassEmailModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.MassEmailModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Plex": {
      "post": {
        "tags": [
          "Plex"
        ],
        "summary": "Signs into the Plex API.",
        "requestBody": {
          "description": "The request.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Api.Plex.Models.UserRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Api.Plex.Models.UserRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Api.Plex.Models.UserRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Api.Plex.Models.UserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Api.Plex.Models.PlexAuthentication"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Plex/Libraries": {
      "post": {
        "tags": [
          "Plex"
        ],
        "summary": "Gets the plex libraries.",
        "requestBody": {
          "description": "The settings.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Settings.Models.External.PlexServers"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Settings.Models.External.PlexServers"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Settings.Models.External.PlexServers"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Settings.Models.External.PlexServers"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Models.External.PlexLibrariesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Plex/Libraries/{machineId}": {
      "get": {
        "tags": [
          "Plex"
        ],
        "parameters": [
          {
            "name": "machineId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Models.External.PlexLibrariesLiteResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Plex/user": {
      "post": {
        "tags": [
          "Plex"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Models.External.PlexUserViewModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Models.External.PlexUserViewModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Models.External.PlexUserViewModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Models.External.PlexUserViewModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Plex/servers": {
      "get": {
        "tags": [
          "Plex"
        ],
        "summary": "Gets the plex servers.",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "Plex"
        ],
        "summary": "Gets the plex servers.",
        "requestBody": {
          "description": "The u.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Api.Plex.Models.UserRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Api.Plex.Models.UserRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Api.Plex.Models.UserRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Api.Plex.Models.UserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Models.External.PlexServersViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Plex/friends": {
      "get": {
        "tags": [
          "Plex"
        ],
        "summary": "Gets the plex friends.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Models.External.UsersViewModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Plex/oauth": {
      "post": {
        "tags": [
          "Plex"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Models.PlexOAuthViewModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Models.PlexOAuthViewModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Models.PlexOAuthViewModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Models.PlexOAuthViewModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Radarr/Profiles": {
      "post": {
        "tags": [
          "Radarr"
        ],
        "summary": "Gets the Radarr profiles.",
        "requestBody": {
          "description": "The settings.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.RadarrSettings"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.RadarrSettings"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.RadarrSettings"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.RadarrSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "get": {
        "tags": [
          "Radarr"
        ],
        "summary": "Gets the Radarr profiles using the saved settings\r\n<remarks>The data is cached for an hour</remarks>",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Radarr/enabled": {
      "get": {
        "tags": [
          "Radarr"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Radarr/RootFolders": {
      "post": {
        "tags": [
          "Radarr"
        ],
        "summary": "Gets the Radarr root folders.",
        "requestBody": {
          "description": "The settings.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.RadarrSettings"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.RadarrSettings"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.RadarrSettings"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.RadarrSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Api.Radarr.Models.RadarrRootFolder"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Radarr"
        ],
        "summary": "Gets the Radarr root folders using the saved settings.\r\n<remarks>The data is cached for an hour</remarks>",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Api.Radarr.Models.RadarrRootFolder"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Radarr/tags": {
      "post": {
        "tags": [
          "Radarr"
        ],
        "summary": "Gets the Radarr tags",
        "requestBody": {
          "description": "The settings.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.SonarrSettings"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.SonarrSettings"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.SonarrSettings"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.SonarrSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Api.Radarr.Models.Tag"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Radarr"
        ],
        "summary": "Gets the Radarr tags",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Api.Radarr.Models.Tag"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/RecentlyAdded/movies": {
      "get": {
        "tags": [
          "RecentlyAdded"
        ],
        "summary": "Returns the recently added movies for the past 7 days",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Core.Models.RecentlyAddedMovieModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/RecentlyAdded/tv": {
      "get": {
        "tags": [
          "RecentlyAdded"
        ],
        "summary": "Returns the recently added tv shows for the past 7 days",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Core.Models.RecentlyAddedMovieModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/RecentlyAdded/tv/grouped": {
      "get": {
        "tags": [
          "RecentlyAdded"
        ],
        "summary": "Returns the recently added tv shows for the past 7 days and groups them by season",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Core.Models.RecentlyAddedMovieModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Request/movie/{count}/{position}/{orderType}/{statusType}/{availabilityType}": {
      "get": {
        "tags": [
          "Request"
        ],
        "summary": "Gets movie requests.",
        "parameters": [
          {
            "name": "count",
            "in": "path",
            "description": "The count of items you want to return.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "position",
            "in": "path",
            "description": "The position.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "orderType",
            "in": "path",
            "description": "The way we want to order.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "statusType",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "availabilityType",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.UI.RequestsViewModel`1[[Ombi.Store.Entities.Requests.MovieRequests, Ombi.Store, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Request/movie/info/{requestId}": {
      "get": {
        "tags": [
          "Request"
        ],
        "summary": "Returns information about the Single Movie Request",
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "description": "the movie request id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Store.Entities.Requests.MovieRequests"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Request/movie/total": {
      "get": {
        "tags": [
          "Request"
        ],
        "summary": "Gets the total amount of movie requests.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Request/movie": {
      "get": {
        "tags": [
          "Request"
        ],
        "summary": "Gets all movie requests.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Store.Entities.Requests.MovieRequests"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Request"
        ],
        "summary": "Requests a movie.",
        "requestBody": {
          "description": "The movie.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.Requests.MovieRequestViewModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.Requests.MovieRequestViewModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.Requests.MovieRequestViewModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.Requests.MovieRequestViewModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Engine.RequestEngineResult"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Request"
        ],
        "summary": "Updates the specified movie request.",
        "requestBody": {
          "description": "The Movie's ID",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Store.Entities.Requests.MovieRequests"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Store.Entities.Requests.MovieRequests"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Store.Entities.Requests.MovieRequests"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Store.Entities.Requests.MovieRequests"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Store.Entities.Requests.MovieRequests"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Request/movie/search/{searchTerm}": {
      "get": {
        "tags": [
          "Request"
        ],
        "summary": "Searches for a specific movie request",
        "parameters": [
          {
            "name": "searchTerm",
            "in": "path",
            "description": "The search term.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Store.Entities.Requests.MovieRequests"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Request/movie/{requestId}": {
      "delete": {
        "tags": [
          "Request"
        ],
        "summary": "Deletes the specified movie request.",
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "description": "The request identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Engine.RequestEngineResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Request/movie/all": {
      "delete": {
        "tags": [
          "Request"
        ],
        "summary": "Deletes the all movie request.",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Request/movie/approve": {
      "post": {
        "tags": [
          "Request"
        ],
        "summary": "Approves the specified movie request.",
        "requestBody": {
          "description": "The Movie's ID",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.Requests.MovieUpdateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.Requests.MovieUpdateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.Requests.MovieUpdateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.Requests.MovieUpdateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Engine.RequestEngineResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Request/movie/available": {
      "post": {
        "tags": [
          "Request"
        ],
        "summary": "Set's the specified Movie as available",
        "requestBody": {
          "description": "The Movie's ID",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.Requests.MovieUpdateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.Requests.MovieUpdateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.Requests.MovieUpdateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.Requests.MovieUpdateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Engine.RequestEngineResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Request/movie/unavailable": {
      "post": {
        "tags": [
          "Request"
        ],
        "summary": "Set's the specified Movie as unavailable",
        "requestBody": {
          "description": "The Movie's ID",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.Requests.MovieUpdateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.Requests.MovieUpdateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.Requests.MovieUpdateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.Requests.MovieUpdateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Engine.RequestEngineResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Request/movie/deny": {
      "put": {
        "tags": [
          "Request"
        ],
        "summary": "Denies the specified movie request.",
        "requestBody": {
          "description": "The Movie's ID",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.Requests.DenyMovieModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.Requests.DenyMovieModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.Requests.DenyMovieModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.Requests.DenyMovieModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Engine.RequestEngineResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Request/tv/total": {
      "get": {
        "tags": [
          "Request"
        ],
        "summary": "Gets the total amount of TV requests.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Request/tv/{count}/{position}/{orderType}/{statusFilterType}/{availabilityFilterType}": {
      "get": {
        "tags": [
          "Request"
        ],
        "summary": "Gets the tv requests.",
        "parameters": [
          {
            "name": "count",
            "in": "path",
            "description": "The count of items you want to return.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "position",
            "in": "path",
            "description": "The position.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "orderType",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "statusType",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "availabilityType",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "statusFilterType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "availabilityFilterType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.UI.RequestsViewModel`1[[Ombi.Store.Entities.Requests.TvRequests, Ombi.Store, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Request/tvlite/{count}/{position}/{orderType}/{statusFilterType}/{availabilityFilterType}": {
      "get": {
        "tags": [
          "Request"
        ],
        "summary": "Gets the tv requests lite.",
        "parameters": [
          {
            "name": "count",
            "in": "path",
            "description": "The count of items you want to return.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "position",
            "in": "path",
            "description": "The position.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "orderType",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "statusType",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "availabilityType",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "statusFilterType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "availabilityFilterType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.UI.RequestsViewModel`1[[Ombi.Store.Entities.Requests.TvRequests, Ombi.Store, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Request/tv": {
      "get": {
        "tags": [
          "Request"
        ],
        "summary": "Gets the tv requests.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Store.Entities.Requests.TvRequests"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Request"
        ],
        "summary": "Requests a tv show/episode/season.",
        "requestBody": {
          "description": "The tv.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.Requests.TvRequestViewModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.Requests.TvRequestViewModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.Requests.TvRequestViewModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.Requests.TvRequestViewModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Engine.RequestEngineResult"
                }
              }
            }
          }
        },
        "deprecated": true
      },
      "put": {
        "tags": [
          "Request"
        ],
        "summary": "Updates the a specific tv request",
        "requestBody": {
          "description": "The model.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Store.Entities.Requests.TvRequests"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Store.Entities.Requests.TvRequests"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Store.Entities.Requests.TvRequests"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Store.Entities.Requests.TvRequests"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Store.Entities.Requests.TvRequests"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Request/tvlite": {
      "get": {
        "tags": [
          "Request"
        ],
        "summary": "Gets the tv requests without the whole object graph (Does not include seasons/episodes).",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Store.Entities.Requests.TvRequests"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Request/tv/{requestId}": {
      "get": {
        "tags": [
          "Request"
        ],
        "summary": "Returns the full request object for the specified requestId",
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Store.Entities.Requests.TvRequests"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Request"
        ],
        "summary": "Deletes the a specific tv request",
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "description": "The request identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Request/tv/search/{searchTerm}": {
      "get": {
        "tags": [
          "Request"
        ],
        "summary": "Searches for a specific tv request",
        "parameters": [
          {
            "name": "searchTerm",
            "in": "path",
            "description": "The search term.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Store.Entities.Requests.TvRequests"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Request/tv/root/{requestId}/{rootFolderId}": {
      "put": {
        "tags": [
          "Request"
        ],
        "summary": "Updates the root path for this tv show",
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "rootFolderId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Request/tv/quality/{requestId}/{qualityId}": {
      "put": {
        "tags": [
          "Request"
        ],
        "summary": "Updates the quality profile for this tv show",
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "qualityId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Request/tv/child": {
      "put": {
        "tags": [
          "Request"
        ],
        "summary": "Updates the a specific child request",
        "requestBody": {
          "description": "The model.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Store.Entities.Requests.ChildRequests"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Store.Entities.Requests.ChildRequests"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Store.Entities.Requests.ChildRequests"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Store.Entities.Requests.ChildRequests"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Store.Entities.Requests.ChildRequests"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Request/tv/deny": {
      "put": {
        "tags": [
          "Request"
        ],
        "summary": "Denies the a specific child request",
        "requestBody": {
          "description": "This is the child request's ID",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Models.DenyTvModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Models.DenyTvModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Models.DenyTvModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Models.DenyTvModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Engine.RequestEngineResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Request/tv/available": {
      "post": {
        "tags": [
          "Request"
        ],
        "summary": "Set's the specified tv child as available",
        "requestBody": {
          "description": "The Movie's ID",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Models.TvUpdateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Models.TvUpdateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Models.TvUpdateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Models.TvUpdateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Engine.RequestEngineResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Request/tv/unavailable": {
      "post": {
        "tags": [
          "Request"
        ],
        "summary": "Set's the specified tv child as unavailable",
        "requestBody": {
          "description": "The Movie's ID",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Models.TvUpdateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Models.TvUpdateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Models.TvUpdateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Models.TvUpdateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Engine.RequestEngineResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Request/tv/approve": {
      "post": {
        "tags": [
          "Request"
        ],
        "summary": "Updates the a specific child request",
        "requestBody": {
          "description": "This is the child request's ID",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Models.TvUpdateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Models.TvUpdateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Models.TvUpdateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Models.TvUpdateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Engine.RequestEngineResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Request/tv/child/{requestId}": {
      "delete": {
        "tags": [
          "Request"
        ],
        "summary": "Deletes the a specific tv request",
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "description": "The model.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Engine.RequestEngineResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Request/tv/{requestId}/child": {
      "get": {
        "tags": [
          "Request"
        ],
        "summary": "Retuns all children requests for the request id",
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "description": "The Request Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Store.Entities.Requests.ChildRequests"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Request/count": {
      "get": {
        "tags": [
          "Request"
        ],
        "summary": "Gets the count of total requests",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.Requests.RequestCountModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Request/userhasrequest": {
      "get": {
        "tags": [
          "Request"
        ],
        "summary": "Checks if the passed in user has a request",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Request/movie/subscribe/{requestId}": {
      "post": {
        "tags": [
          "Request"
        ],
        "summary": "Subscribes for notifications to a movie request",
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Request/tv/subscribe/{requestId}": {
      "post": {
        "tags": [
          "Request"
        ],
        "summary": "Subscribes for notifications to a TV request",
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Request/movie/unsubscribe/{requestId}": {
      "post": {
        "tags": [
          "Request"
        ],
        "summary": "UnSubscribes for notifications to a movie request",
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Request/tv/unsubscribe/{requestId}": {
      "post": {
        "tags": [
          "Request"
        ],
        "summary": "UnSubscribes for notifications to a TV request",
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Request/movie/remaining": {
      "get": {
        "tags": [
          "Request"
        ],
        "summary": "Gets model containing remaining number of movie requests.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.RequestQuotaCountModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Request/tv/remaining": {
      "get": {
        "tags": [
          "Request"
        ],
        "summary": "Gets model containing remaining number of tv requests.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.RequestQuotaCountModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/RequestRetry": {
      "get": {
        "tags": [
          "RequestRetry"
        ],
        "summary": "Get's all the failed requests that are currently in the queue",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Models.FailedRequestViewModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/RequestRetry/{queueId}": {
      "delete": {
        "tags": [
          "RequestRetry"
        ],
        "parameters": [
          {
            "name": "queueId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v2/Requests/movie/{count}/{position}/{sort}/{sortOrder}": {
      "get": {
        "tags": [
          "Requests"
        ],
        "summary": "Gets movie requests.",
        "parameters": [
          {
            "name": "count",
            "in": "path",
            "description": "The count of items you want to return. e.g. 30",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "position",
            "in": "path",
            "description": "The position. e.g. position 60 for a 2nd page (since we have already got the first 30 items)",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "path",
            "description": "The item to sort on e.g. \"requestDate\"",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortOrder",
            "in": "path",
            "description": "asc or desc",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.UI.RequestsViewModel`1[[Ombi.Store.Entities.Requests.MovieRequests, Ombi.Store, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.UI.RequestsViewModel`1[[Ombi.Store.Entities.Requests.MovieRequests, Ombi.Store, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.UI.RequestsViewModel`1[[Ombi.Store.Entities.Requests.MovieRequests, Ombi.Store, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/Requests/movie/availble/{count}/{position}/{sort}/{sortOrder}": {
      "get": {
        "tags": [
          "Requests"
        ],
        "parameters": [
          {
            "name": "count",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "position",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortOrder",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.UI.RequestsViewModel`1[[Ombi.Store.Entities.Requests.MovieRequests, Ombi.Store, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.UI.RequestsViewModel`1[[Ombi.Store.Entities.Requests.MovieRequests, Ombi.Store, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.UI.RequestsViewModel`1[[Ombi.Store.Entities.Requests.MovieRequests, Ombi.Store, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/Requests/movie/available/{count}/{position}/{sort}/{sortOrder}": {
      "get": {
        "tags": [
          "Requests"
        ],
        "parameters": [
          {
            "name": "count",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "position",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortOrder",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.UI.RequestsViewModel`1[[Ombi.Store.Entities.Requests.MovieRequests, Ombi.Store, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.UI.RequestsViewModel`1[[Ombi.Store.Entities.Requests.MovieRequests, Ombi.Store, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.UI.RequestsViewModel`1[[Ombi.Store.Entities.Requests.MovieRequests, Ombi.Store, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/Requests/movie/processing/{count}/{position}/{sort}/{sortOrder}": {
      "get": {
        "tags": [
          "Requests"
        ],
        "parameters": [
          {
            "name": "count",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "position",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortOrder",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.UI.RequestsViewModel`1[[Ombi.Store.Entities.Requests.MovieRequests, Ombi.Store, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.UI.RequestsViewModel`1[[Ombi.Store.Entities.Requests.MovieRequests, Ombi.Store, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.UI.RequestsViewModel`1[[Ombi.Store.Entities.Requests.MovieRequests, Ombi.Store, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/Requests/movie/pending/{count}/{position}/{sort}/{sortOrder}": {
      "get": {
        "tags": [
          "Requests"
        ],
        "parameters": [
          {
            "name": "count",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "position",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortOrder",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.UI.RequestsViewModel`1[[Ombi.Store.Entities.Requests.MovieRequests, Ombi.Store, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.UI.RequestsViewModel`1[[Ombi.Store.Entities.Requests.MovieRequests, Ombi.Store, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.UI.RequestsViewModel`1[[Ombi.Store.Entities.Requests.MovieRequests, Ombi.Store, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/Requests/movie/denied/{count}/{position}/{sort}/{sortOrder}": {
      "get": {
        "tags": [
          "Requests"
        ],
        "parameters": [
          {
            "name": "count",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "position",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortOrder",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.UI.RequestsViewModel`1[[Ombi.Store.Entities.Requests.MovieRequests, Ombi.Store, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.UI.RequestsViewModel`1[[Ombi.Store.Entities.Requests.MovieRequests, Ombi.Store, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.UI.RequestsViewModel`1[[Ombi.Store.Entities.Requests.MovieRequests, Ombi.Store, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/Requests/movie/unavailable/{count}/{position}/{sort}/{sortOrder}": {
      "get": {
        "tags": [
          "Requests"
        ],
        "summary": "Gets the unavailable movie requests.",
        "parameters": [
          {
            "name": "count",
            "in": "path",
            "description": "The count of items you want to return. e.g. 30",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "position",
            "in": "path",
            "description": "The position. e.g. position 60 for a 2nd page (since we have already got the first 30 items)",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "path",
            "description": "The item to sort on e.g. \"requestDate\"",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortOrder",
            "in": "path",
            "description": "asc or desc",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.UI.RequestsViewModel`1[[Ombi.Store.Entities.Requests.MovieRequests, Ombi.Store, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.UI.RequestsViewModel`1[[Ombi.Store.Entities.Requests.MovieRequests, Ombi.Store, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.UI.RequestsViewModel`1[[Ombi.Store.Entities.Requests.MovieRequests, Ombi.Store, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/Requests/tv/{count}/{position}/{sort}/{sortOrder}": {
      "get": {
        "tags": [
          "Requests"
        ],
        "summary": "Gets Tv requests.",
        "parameters": [
          {
            "name": "count",
            "in": "path",
            "description": "The count of items you want to return. e.g. 30",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "position",
            "in": "path",
            "description": "The position. e.g. position 60 for a 2nd page (since we have already got the first 30 items)",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "path",
            "description": "The item to sort on e.g. \"requestDate\"",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortOrder",
            "in": "path",
            "description": "asc or desc",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.UI.RequestsViewModel`1[[Ombi.Store.Entities.Requests.ChildRequests, Ombi.Store, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.UI.RequestsViewModel`1[[Ombi.Store.Entities.Requests.ChildRequests, Ombi.Store, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.UI.RequestsViewModel`1[[Ombi.Store.Entities.Requests.ChildRequests, Ombi.Store, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/Requests/tv/pending/{count}/{position}/{sort}/{sortOrder}": {
      "get": {
        "tags": [
          "Requests"
        ],
        "parameters": [
          {
            "name": "count",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "position",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortOrder",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.UI.RequestsViewModel`1[[Ombi.Store.Entities.Requests.ChildRequests, Ombi.Store, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.UI.RequestsViewModel`1[[Ombi.Store.Entities.Requests.ChildRequests, Ombi.Store, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.UI.RequestsViewModel`1[[Ombi.Store.Entities.Requests.ChildRequests, Ombi.Store, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/Requests/tv/processing/{count}/{position}/{sort}/{sortOrder}": {
      "get": {
        "tags": [
          "Requests"
        ],
        "parameters": [
          {
            "name": "count",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "position",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortOrder",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.UI.RequestsViewModel`1[[Ombi.Store.Entities.Requests.ChildRequests, Ombi.Store, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.UI.RequestsViewModel`1[[Ombi.Store.Entities.Requests.ChildRequests, Ombi.Store, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.UI.RequestsViewModel`1[[Ombi.Store.Entities.Requests.ChildRequests, Ombi.Store, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/Requests/tv/available/{count}/{position}/{sort}/{sortOrder}": {
      "get": {
        "tags": [
          "Requests"
        ],
        "parameters": [
          {
            "name": "count",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "position",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortOrder",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.UI.RequestsViewModel`1[[Ombi.Store.Entities.Requests.ChildRequests, Ombi.Store, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.UI.RequestsViewModel`1[[Ombi.Store.Entities.Requests.ChildRequests, Ombi.Store, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.UI.RequestsViewModel`1[[Ombi.Store.Entities.Requests.ChildRequests, Ombi.Store, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/Requests/tv/denied/{count}/{position}/{sort}/{sortOrder}": {
      "get": {
        "tags": [
          "Requests"
        ],
        "parameters": [
          {
            "name": "count",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "position",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortOrder",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.UI.RequestsViewModel`1[[Ombi.Store.Entities.Requests.ChildRequests, Ombi.Store, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.UI.RequestsViewModel`1[[Ombi.Store.Entities.Requests.ChildRequests, Ombi.Store, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.UI.RequestsViewModel`1[[Ombi.Store.Entities.Requests.ChildRequests, Ombi.Store, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/Requests/tv/unavailable/{count}/{position}/{sort}/{sortOrder}": {
      "get": {
        "tags": [
          "Requests"
        ],
        "summary": "Gets unavailable Tv requests.",
        "parameters": [
          {
            "name": "count",
            "in": "path",
            "description": "The count of items you want to return. e.g. 30",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "position",
            "in": "path",
            "description": "The position. e.g. position 60 for a 2nd page (since we have already got the first 30 items)",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "path",
            "description": "The item to sort on e.g. \"requestDate\"",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortOrder",
            "in": "path",
            "description": "asc or desc",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.UI.RequestsViewModel`1[[Ombi.Store.Entities.Requests.ChildRequests, Ombi.Store, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.UI.RequestsViewModel`1[[Ombi.Store.Entities.Requests.ChildRequests, Ombi.Store, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.UI.RequestsViewModel`1[[Ombi.Store.Entities.Requests.ChildRequests, Ombi.Store, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/Requests/movie/advancedoptions": {
      "post": {
        "tags": [
          "Requests"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.Requests.MediaAdvancedOptions"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.Requests.MediaAdvancedOptions"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.Requests.MediaAdvancedOptions"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.Requests.MediaAdvancedOptions"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Engine.RequestEngineResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Engine.RequestEngineResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Engine.RequestEngineResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/Requests/tv/advancedoptions": {
      "post": {
        "tags": [
          "Requests"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.Requests.MediaAdvancedOptions"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.Requests.MediaAdvancedOptions"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.Requests.MediaAdvancedOptions"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.Requests.MediaAdvancedOptions"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Engine.RequestEngineResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Engine.RequestEngineResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Engine.RequestEngineResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/Requests/album/available/{count}/{position}/{sort}/{sortOrder}": {
      "get": {
        "tags": [
          "Requests"
        ],
        "parameters": [
          {
            "name": "count",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "position",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortOrder",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.UI.RequestsViewModel`1[[Ombi.Store.Entities.Requests.AlbumRequest, Ombi.Store, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.UI.RequestsViewModel`1[[Ombi.Store.Entities.Requests.AlbumRequest, Ombi.Store, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.UI.RequestsViewModel`1[[Ombi.Store.Entities.Requests.AlbumRequest, Ombi.Store, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/Requests/album/processing/{count}/{position}/{sort}/{sortOrder}": {
      "get": {
        "tags": [
          "Requests"
        ],
        "parameters": [
          {
            "name": "count",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "position",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortOrder",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.UI.RequestsViewModel`1[[Ombi.Store.Entities.Requests.AlbumRequest, Ombi.Store, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.UI.RequestsViewModel`1[[Ombi.Store.Entities.Requests.AlbumRequest, Ombi.Store, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.UI.RequestsViewModel`1[[Ombi.Store.Entities.Requests.AlbumRequest, Ombi.Store, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/Requests/album/pending/{count}/{position}/{sort}/{sortOrder}": {
      "get": {
        "tags": [
          "Requests"
        ],
        "parameters": [
          {
            "name": "count",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "position",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortOrder",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.UI.RequestsViewModel`1[[Ombi.Store.Entities.Requests.AlbumRequest, Ombi.Store, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.UI.RequestsViewModel`1[[Ombi.Store.Entities.Requests.AlbumRequest, Ombi.Store, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.UI.RequestsViewModel`1[[Ombi.Store.Entities.Requests.AlbumRequest, Ombi.Store, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/Requests/album/denied/{count}/{position}/{sort}/{sortOrder}": {
      "get": {
        "tags": [
          "Requests"
        ],
        "parameters": [
          {
            "name": "count",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "position",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortOrder",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.UI.RequestsViewModel`1[[Ombi.Store.Entities.Requests.AlbumRequest, Ombi.Store, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.UI.RequestsViewModel`1[[Ombi.Store.Entities.Requests.AlbumRequest, Ombi.Store, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.UI.RequestsViewModel`1[[Ombi.Store.Entities.Requests.AlbumRequest, Ombi.Store, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/Requests/album/{count}/{position}/{sort}/{sortOrder}": {
      "get": {
        "tags": [
          "Requests"
        ],
        "parameters": [
          {
            "name": "count",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "position",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortOrder",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.UI.RequestsViewModel`1[[Ombi.Store.Entities.Requests.AlbumRequest, Ombi.Store, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.UI.RequestsViewModel`1[[Ombi.Store.Entities.Requests.AlbumRequest, Ombi.Store, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.UI.RequestsViewModel`1[[Ombi.Store.Entities.Requests.AlbumRequest, Ombi.Store, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/Requests/tv": {
      "post": {
        "tags": [
          "Requests"
        ],
        "summary": "Requests a tv show/episode/season.",
        "requestBody": {
          "description": "The tv.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.Requests.TvRequestViewModelV2"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.Requests.TvRequestViewModelV2"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.Requests.TvRequestViewModelV2"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.Requests.TvRequestViewModelV2"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Engine.RequestEngineResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Engine.RequestEngineResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Engine.RequestEngineResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/Requests/reprocess/{type}/{requestId}": {
      "post": {
        "tags": [
          "Requests"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Ombi.Store.Entities.RequestType"
            }
          },
          {
            "name": "requestId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v2/Requests/movie/collection/{collectionId}": {
      "post": {
        "tags": [
          "Requests"
        ],
        "parameters": [
          {
            "name": "collectionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Engine.RequestEngineResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Engine.RequestEngineResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Engine.RequestEngineResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/Search/multi/{searchTerm}": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Returns search results for both TV and Movies",
        "description": "The ID's returned by this are all TheMovieDbID's even for the TV Shows. You can call M:Ombi.Controllers.V2.SearchController.GetTvInfoByMovieId(System.String) to get TV\r\n             Show information using the MovieDbId.",
        "parameters": [
          {
            "name": "searchTerm",
            "in": "path",
            "description": "The search you want, this can be for a movie or TV show e.g. Star Wars will return\r\n             all Star Wars movies and Star Wars Rebels the TV Sho",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Filter for the search",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.Search.V2.MultiSearchFilter"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.Search.V2.MultiSearchFilter"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.Search.V2.MultiSearchFilter"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.Search.V2.MultiSearchFilter"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Core.Models.Search.V2.MultiSearchResult"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Core.Models.Search.V2.MultiSearchResult"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Core.Models.Search.V2.MultiSearchResult"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/Search/movie/{movieDbId}": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Returns details for a single movie",
        "parameters": [
          {
            "name": "movieDbId",
            "in": "path",
            "description": "The MovieDB Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.Search.V2.MovieFullInfoViewModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.Search.V2.MovieFullInfoViewModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.Search.V2.MovieFullInfoViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/Search/movie/imdb/{imdbid}": {
      "get": {
        "tags": [
          "Search"
        ],
        "parameters": [
          {
            "name": "imdbId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.Search.V2.MovieFullInfoViewModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.Search.V2.MovieFullInfoViewModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.Search.V2.MovieFullInfoViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/Search/movie/request/{requestId}": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Returns details for a single movie",
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.Search.V2.MovieFullInfoViewModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.Search.V2.MovieFullInfoViewModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.Search.V2.MovieFullInfoViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/Search/movie/collection/{collectionId}": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Returns basic information about the provided collection",
        "parameters": [
          {
            "name": "collectionId",
            "in": "path",
            "description": "The collection id from TheMovieDb",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.Search.V2.MovieCollectionsViewModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.Search.V2.MovieCollectionsViewModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.Search.V2.MovieCollectionsViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/Search/tv/{tvdbId}": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Returns details for a single show",
        "description": "TVMaze is the TV Show Provider",
        "parameters": [
          {
            "name": "tvdbid",
            "in": "path",
            "description": "The TVDB Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.Search.V2.SearchFullInfoTvShowViewModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.Search.V2.SearchFullInfoTvShowViewModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.Search.V2.SearchFullInfoTvShowViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/Search/tv/request/{requestId}": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Returns details for a single show",
        "description": "TVMaze is the TV Show Provider",
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.Search.V2.SearchFullInfoTvShowViewModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.Search.V2.SearchFullInfoTvShowViewModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.Search.V2.SearchFullInfoTvShowViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/Search/tv/moviedb/{moviedbid}": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Returns details for a single show",
        "parameters": [
          {
            "name": "moviedbid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.Search.V2.SearchFullInfoTvShowViewModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.Search.V2.SearchFullInfoTvShowViewModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.Search.V2.SearchFullInfoTvShowViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/Search/movie/similar": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Returns similar movies to the movie id passed in",
        "description": "We use TheMovieDb as the Movie Provider",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Models.SimilarMoviesRefineModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Models.SimilarMoviesRefineModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Models.SimilarMoviesRefineModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Models.SimilarMoviesRefineModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Core.Models.Search.SearchMovieViewModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Core.Models.Search.SearchMovieViewModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Core.Models.Search.SearchMovieViewModel"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/Search/movie/popular": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Returns Popular Movies",
        "description": "We use TheMovieDb as the Movie Provider",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Core.Models.Search.SearchMovieViewModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Core.Models.Search.SearchMovieViewModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Core.Models.Search.SearchMovieViewModel"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/Search/movie/popular/{currentPosition}/{amountToLoad}": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Returns Popular Movies using paging",
        "description": "We use TheMovieDb as the Movie Provider",
        "parameters": [
          {
            "name": "currentPosition",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "amountToLoad",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Core.Models.Search.SearchMovieViewModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Core.Models.Search.SearchMovieViewModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Core.Models.Search.SearchMovieViewModel"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/Search/advancedSearch/movie/{currentPosition}/{amountToLoad}": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Returns Advanced Searched Media using paging",
        "description": "We use TheMovieDb as the Movie Provider",
        "parameters": [
          {
            "name": "currentPosition",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "amountToLoad",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Api.TheMovieDb.Models.DiscoverModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Api.TheMovieDb.Models.DiscoverModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Api.TheMovieDb.Models.DiscoverModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Api.TheMovieDb.Models.DiscoverModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Core.Models.Search.SearchMovieViewModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Core.Models.Search.SearchMovieViewModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Core.Models.Search.SearchMovieViewModel"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/Search/movie/seasonal/{currentPosition}/{amountToLoad}": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Returns Seasonal Movies",
        "description": "We use TheMovieDb as the Movie Provider",
        "parameters": [
          {
            "name": "currentPosition",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "amountToLoad",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Core.Models.Search.SearchMovieViewModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Core.Models.Search.SearchMovieViewModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Core.Models.Search.SearchMovieViewModel"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/Search/movie/requested/{currentPosition}/{amountToLoad}": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Returns Recently Requested Movies using Paging",
        "description": "We use TheMovieDb as the Movie Provider",
        "parameters": [
          {
            "name": "currentPosition",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "amountToLoad",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Core.Models.Search.SearchMovieViewModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Core.Models.Search.SearchMovieViewModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Core.Models.Search.SearchMovieViewModel"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/Search/tv/requested/{currentPosition}/{amountToLoad}": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Returns Recently Requested Tv using Paging",
        "description": "We use TheMovieDb as the Movie Provider",
        "parameters": [
          {
            "name": "currentPosition",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "amountToLoad",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Core.Models.Search.V2.SearchFullInfoTvShowViewModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Core.Models.Search.V2.SearchFullInfoTvShowViewModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Core.Models.Search.V2.SearchFullInfoTvShowViewModel"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/Search/movie/nowplaying": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Returns Now Playing Movies",
        "description": "We use TheMovieDb as the Movie Provider",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Core.Models.Search.SearchMovieViewModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Core.Models.Search.SearchMovieViewModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Core.Models.Search.SearchMovieViewModel"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/Search/movie/nowplaying/{currentPosition}/{amountToLoad}": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Returns Now Playing Movies by page",
        "description": "We use TheMovieDb as the Movie Provider",
        "parameters": [
          {
            "name": "currentPosition",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "amountToLoad",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Core.Models.Search.SearchMovieViewModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Core.Models.Search.SearchMovieViewModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Core.Models.Search.SearchMovieViewModel"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/Search/movie/toprated": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Returns top rated movies.",
        "description": "We use TheMovieDb as the Movie Provider",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Core.Models.Search.SearchMovieViewModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Core.Models.Search.SearchMovieViewModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Core.Models.Search.SearchMovieViewModel"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/Search/movie/toprated/{currentPosition}/{amountToLoad}": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Returns top rated movies by page.",
        "description": "We use TheMovieDb as the Movie Provider",
        "parameters": [
          {
            "name": "currentPosition",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "amountToLoad",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Core.Models.Search.SearchMovieViewModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Core.Models.Search.SearchMovieViewModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Core.Models.Search.SearchMovieViewModel"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/Search/movie/upcoming": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Returns Upcoming movies.",
        "description": "We use TheMovieDb as the Movie Provider",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Core.Models.Search.SearchMovieViewModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Core.Models.Search.SearchMovieViewModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Core.Models.Search.SearchMovieViewModel"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/Search/movie/upcoming/{currentPosition}/{amountToLoad}": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Returns Upcoming movies by page.",
        "description": "We use TheMovieDb as the Movie Provider",
        "parameters": [
          {
            "name": "currentPosition",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "amountToLoad",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Core.Models.Search.SearchMovieViewModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Core.Models.Search.SearchMovieViewModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Core.Models.Search.SearchMovieViewModel"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/Search/tv/popular/{currentPosition}/{amountToLoad}": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Returns Popular Tv Shows",
        "description": "We use Trakt.tv as the Provider",
        "parameters": [
          {
            "name": "currentPosition",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "amountToLoad",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Core.Models.Search.SearchTvShowViewModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Core.Models.Search.SearchTvShowViewModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Core.Models.Search.SearchTvShowViewModel"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/Search/tv/anticipated/{currentPosition}/{amountToLoad}": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Returns most Anticipated tv shows by page.",
        "description": "We use Trakt.tv as the Provider",
        "parameters": [
          {
            "name": "currentPosition",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "amountToLoad",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Core.Models.Search.SearchTvShowViewModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Core.Models.Search.SearchTvShowViewModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Core.Models.Search.SearchTvShowViewModel"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/Search/tv/mostwatched/{currentPosition}/{amountToLoad}": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Returns Most watched shows by page.",
        "description": "We use Trakt.tv as the Provider",
        "parameters": [
          {
            "name": "currentPosition",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "amountToLoad",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Core.Models.Search.SearchTvShowViewModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Core.Models.Search.SearchTvShowViewModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Core.Models.Search.SearchTvShowViewModel"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v2/Search/tv/trending/{currentPosition}/{amountToLoad}": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Returns trending shows by page",
        "description": "We use Trakt.tv as the Provider",
        "parameters": [
          {
            "name": "currentPosition",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "amountToLoad",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Core.Models.Search.SearchTvShowViewModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Core.Models.Search.SearchTvShowViewModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Core.Models.Search.SearchTvShowViewModel"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/Search/actor/{actorId}/movie": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Returns all the movies that is by the actor id",
        "parameters": [
          {
            "name": "actorId",
            "in": "path",
            "description": "TheMovieDb Actor ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Api.TheMovieDb.Models.ActorCredits"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Api.TheMovieDb.Models.ActorCredits"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Api.TheMovieDb.Models.ActorCredits"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/Search/actor/{actorId}/tv": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Returns all the tv shows that is by the actor id",
        "parameters": [
          {
            "name": "actorId",
            "in": "path",
            "description": "TheMovieDb Actor ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Api.TheMovieDb.Models.ActorCredits"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Api.TheMovieDb.Models.ActorCredits"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Api.TheMovieDb.Models.ActorCredits"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/Search/artist/{artistId}": {
      "get": {
        "tags": [
          "Search"
        ],
        "parameters": [
          {
            "name": "artistId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.Search.V2.Music.ArtistInformation"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.Search.V2.Music.ArtistInformation"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.Search.V2.Music.ArtistInformation"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/Search/artist/request/{requestId}": {
      "get": {
        "tags": [
          "Search"
        ],
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.Search.V2.Music.ArtistInformation"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.Search.V2.Music.ArtistInformation"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.Search.V2.Music.ArtistInformation"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/Search/artist/album/{albumId}": {
      "get": {
        "tags": [
          "Search"
        ],
        "parameters": [
          {
            "name": "albumId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.Search.V2.Music.ReleaseGroup"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.Search.V2.Music.ReleaseGroup"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.Search.V2.Music.ReleaseGroup"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/Search/releasegroupart/{musicBrainzId}": {
      "get": {
        "tags": [
          "Search"
        ],
        "parameters": [
          {
            "name": "musicBrainzId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.Search.V2.Music.AlbumArt"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.Search.V2.Music.AlbumArt"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.Search.V2.Music.AlbumArt"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/Search/ratings/movie/{name}/{year}": {
      "get": {
        "tags": [
          "Search"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "year",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Api.RottenTomatoes.Models.MovieRatings"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Api.RottenTomatoes.Models.MovieRatings"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Api.RottenTomatoes.Models.MovieRatings"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/Search/ratings/tv/{name}/{year}": {
      "get": {
        "tags": [
          "Search"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "year",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Api.RottenTomatoes.Models.TvRatings"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Api.RottenTomatoes.Models.TvRatings"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Api.RottenTomatoes.Models.TvRatings"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/Search/stream/movie/{movieDbId}": {
      "get": {
        "tags": [
          "Search"
        ],
        "parameters": [
          {
            "name": "movieDBId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Core.Models.Search.V2.StreamingData"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Core.Models.Search.V2.StreamingData"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Core.Models.Search.V2.StreamingData"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/Search/stream/tv/{movieDbId}": {
      "get": {
        "tags": [
          "Search"
        ],
        "parameters": [
          {
            "name": "movieDbId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Core.Models.Search.V2.StreamingData"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Core.Models.Search.V2.StreamingData"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Core.Models.Search.V2.StreamingData"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Search/movie/{searchTerm}": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Searches for a movie.",
        "description": "We use TheMovieDb as the Movie Provider",
        "parameters": [
          {
            "name": "searchTerm",
            "in": "path",
            "description": "The search term.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Core.Models.Search.SearchMovieViewModel"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Search/movie/actor": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Searches for movies by a certain actor.",
        "requestBody": {
          "description": "language code is optional, by default it will be en. Language code uses ISO 639-1",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Models.SearchActorModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Models.SearchActorModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Models.SearchActorModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Models.SearchActorModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Search/movie": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Searches for a movie.",
        "description": "We use TheMovieDb as the Movie Provider",
        "requestBody": {
          "description": "The refinement model, language code and year are both optional. Language code uses ISO 639-1",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Models.SearchMovieRefineModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Models.SearchMovieRefineModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Models.SearchMovieRefineModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Models.SearchMovieRefineModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Search/movie/info/{theMovieDbId}": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Gets extra information on the movie e.g. IMDBId",
        "description": "We use TheMovieDb as the Movie Provider",
        "parameters": [
          {
            "name": "theMovieDbId",
            "in": "path",
            "description": "The movie database identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.Search.SearchMovieViewModel"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Search/movie/info": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Gets extra information on the movie e.g. IMDBId",
        "description": "We use TheMovieDb as the Movie Provider",
        "requestBody": {
          "description": "TheMovieDb and Language Code, Pass in the language code (ISO 639-1) to get it back in a different lang",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Models.SearchMovieExtraInfoRefineModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Models.SearchMovieExtraInfoRefineModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Models.SearchMovieExtraInfoRefineModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Models.SearchMovieExtraInfoRefineModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Search/movie/similar": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Returns similar movies to the movie id passed in",
        "description": "We use TheMovieDb as the Movie Provider",
        "requestBody": {
          "description": "the movie",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Models.SimilarMoviesRefineModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Models.SimilarMoviesRefineModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Models.SimilarMoviesRefineModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Models.SimilarMoviesRefineModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Core.Models.Search.SearchMovieViewModel"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Search/movie/{theMovieDbId}/similar": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Returns similar movies to the movie id passed in",
        "description": "We use TheMovieDb as the Movie Provider",
        "parameters": [
          {
            "name": "theMovieDbId",
            "in": "path",
            "description": "ID of the movie",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Core.Models.Search.SearchMovieViewModel"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Search/movie/popular": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Returns Popular Movies",
        "description": "We use TheMovieDb as the Movie Provider",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Core.Models.Search.SearchMovieViewModel"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Search/movie/nowplaying": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Retuns Now Playing Movies",
        "description": "We use TheMovieDb as the Movie Provider",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Core.Models.Search.SearchMovieViewModel"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Search/movie/toprated": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Returns top rated movies.",
        "description": "We use TheMovieDb as the Movie Provider",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Core.Models.Search.SearchMovieViewModel"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Search/movie/upcoming": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Returns Upcoming movies.",
        "description": "We use TheMovieDb as the Movie Provider",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Core.Models.Search.SearchMovieViewModel"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Search/tv/{searchTerm}": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Searches for a Tv Show.",
        "description": "We use TvMaze as the Provider",
        "parameters": [
          {
            "name": "searchTerm",
            "in": "path",
            "description": "The search term.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Core.Models.Search.SearchTvShowViewModel"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Search/tv/info/{tvdbId}": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Gets extra show information.",
        "description": "We use TvMaze as the Provider",
        "parameters": [
          {
            "name": "tvdbId",
            "in": "path",
            "description": "The TVDB identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.Search.SearchTvShowViewModel"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Search/tv/popular": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Returns Popular Tv Shows",
        "description": "We use Trakt.tv as the Provider",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Core.Models.Search.SearchTvShowViewModel"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Search/tv/anticipated": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Returns most Anticiplateds tv shows.",
        "description": "We use Trakt.tv as the Provider",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Core.Models.Search.SearchTvShowViewModel"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Search/tv/mostwatched": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Returns Most watched shows.",
        "description": "We use Trakt.tv as the Provider",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Core.Models.Search.SearchTvShowViewModel"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/Search/tv/trending": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Returns trending shows",
        "description": "We use Trakt.tv as the Provider",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Core.Models.Search.SearchTvShowViewModel"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Search/music/artist/{searchTerm}": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Returns the artist information we searched for",
        "description": "We use Lidarr as the Provider",
        "parameters": [
          {
            "name": "searchTerm",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Core.Models.Search.SearchArtistViewModel"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Search/music/album/{searchTerm}": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Returns the album information we searched for",
        "description": "We use Lidarr as the Provider",
        "parameters": [
          {
            "name": "searchTerm",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Core.Models.Search.SearchAlbumViewModel"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Search/music/album/info/{foreignAlbumId}": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Returns the album information specified by the foreignAlbumId passed in",
        "description": "We use Lidarr as the Provider",
        "parameters": [
          {
            "name": "foreignAlbumId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.Search.SearchAlbumViewModel"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Search/music/artist/album/{foreignArtistId}": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Returns all albums for the artist using the ForeignArtistId",
        "description": "We use Lidarr as the Provider",
        "parameters": [
          {
            "name": "foreignArtistId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Core.Models.Search.SearchAlbumViewModel"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Settings/ombi": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Gets the Ombi settings.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.OmbiSettings"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "Save the Ombi settings.",
        "requestBody": {
          "description": "The ombi.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.OmbiSettings"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.OmbiSettings"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.OmbiSettings"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.OmbiSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Settings/baseurl": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Gets the base url.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Settings/about": {
      "get": {
        "tags": [
          "Settings"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Models.AboutViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Settings/ombi/resetApi": {
      "post": {
        "tags": [
          "Settings"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Settings/plex": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Gets the Plex Settings.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Settings.Models.External.PlexSettings"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "Save the Plex settings.",
        "requestBody": {
          "description": "The plex.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Settings.Models.External.PlexSettings"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Settings.Models.External.PlexSettings"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Settings.Models.External.PlexSettings"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Settings.Models.External.PlexSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Settings/clientid": {
      "get": {
        "tags": [
          "Settings"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Settings/emby": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Gets the Emby Settings.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Settings.Models.External.EmbySettings"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "Save the Emby settings.",
        "requestBody": {
          "description": "The emby.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Settings.Models.External.EmbySettings"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Settings.Models.External.EmbySettings"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Settings.Models.External.EmbySettings"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Settings.Models.External.EmbySettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Settings/jellyfin": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Gets the Jellyfin Settings.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Settings.Models.External.JellyfinSettings"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "Save the Jellyfin settings.",
        "requestBody": {
          "description": "The jellyfin.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Settings.Models.External.JellyfinSettings"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Settings.Models.External.JellyfinSettings"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Settings.Models.External.JellyfinSettings"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Settings.Models.External.JellyfinSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Settings/landingpage": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Gets the Landing Page Settings.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Settings.Models.LandingPageSettings"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "Save the Landing Page settings.",
        "requestBody": {
          "description": "The settings.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Settings.Models.LandingPageSettings"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Settings.Models.LandingPageSettings"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Settings.Models.LandingPageSettings"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Settings.Models.LandingPageSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Settings/customization": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Gets the Customization Settings.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.CustomizationSettings"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "Save the Customization settings.",
        "requestBody": {
          "description": "The settings.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.CustomizationSettings"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.CustomizationSettings"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.CustomizationSettings"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.CustomizationSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Settings/defaultlanguage": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Gets the default language set in Ombi",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Settings/themes": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Get's the preset themes available",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Models.PresetThemeViewModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Settings/sonarr": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Gets the Sonarr Settings.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.SonarrSettings"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "Save the Sonarr settings.",
        "requestBody": {
          "description": "The settings.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.SonarrSettings"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.SonarrSettings"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.SonarrSettings"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.SonarrSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Settings/radarr": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Gets the Radarr Settings.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.RadarrSettings"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "Save the Radarr settings.",
        "requestBody": {
          "description": "The settings.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.RadarrSettings"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.RadarrSettings"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.RadarrSettings"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.RadarrSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Settings/lidarr": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Gets the Lidarr Settings.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.LidarrSettings"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "Save the Lidarr settings.",
        "requestBody": {
          "description": "The settings.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.LidarrSettings"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.LidarrSettings"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.LidarrSettings"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.LidarrSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Settings/lidarrenabled": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Gets the Lidarr Settings.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Settings/authentication": {
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "Save the Authentication settings.",
        "requestBody": {
          "description": "The settings.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.AuthenticationSettings"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.AuthenticationSettings"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.AuthenticationSettings"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.AuthenticationSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Gets the Authentication Settings.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.AuthenticationSettings"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Settings/Update": {
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "Save the Update settings.",
        "requestBody": {
          "description": "The settings.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.UpdateSettings"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.UpdateSettings"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.UpdateSettings"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.UpdateSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Gets the Update Settings.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.UpdateSettings"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Settings/UserManagement": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Gets the UserManagement Settings.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.UserManagementSettings"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "Save the UserManagement settings.",
        "requestBody": {
          "description": "The settings.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.UserManagementSettings"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.UserManagementSettings"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.UserManagementSettings"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.UserManagementSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Settings/CouchPotato": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Gets the CouchPotatoSettings Settings.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.CouchPotatoSettings"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "Save the CouchPotatoSettings settings.",
        "requestBody": {
          "description": "The settings.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.CouchPotatoSettings"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.CouchPotatoSettings"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.CouchPotatoSettings"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.CouchPotatoSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Settings/DogNzb": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Gets the DogNzbSettings Settings.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.DogNzbSettings"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "Save the DogNzbSettings settings.",
        "requestBody": {
          "description": "The settings.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.DogNzbSettings"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.DogNzbSettings"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.DogNzbSettings"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.DogNzbSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Settings/SickRage": {
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "Save the SickRage settings.",
        "requestBody": {
          "description": "The settings.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.SickRageSettings"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.SickRageSettings"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.SickRageSettings"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.SickRageSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Gets the SickRage Settings.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.SickRageSettings"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Settings/jobs": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Gets the JobSettings Settings.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.JobSettings"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "Save the JobSettings settings.",
        "requestBody": {
          "description": "The settings.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.JobSettings"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.JobSettings"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.JobSettings"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.JobSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Models.JobSettingsViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Settings/testcron": {
      "post": {
        "tags": [
          "Settings"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Models.CronViewModelBody"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Models.CronViewModelBody"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Models.CronViewModelBody"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Models.CronViewModelBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Models.CronTestModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Settings/Issues": {
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "Save the Vote settings.",
        "requestBody": {
          "description": "The settings.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.IssueSettings"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.IssueSettings"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.IssueSettings"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.IssueSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Gets the Issues Settings.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.IssueSettings"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Settings/issuesenabled": {
      "get": {
        "tags": [
          "Settings"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Settings/vote": {
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "Save the Vote settings.",
        "requestBody": {
          "description": "The settings.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.VoteSettings"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.VoteSettings"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.VoteSettings"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.VoteSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Gets the Vote Settings.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.VoteSettings"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Settings/voteenabled": {
      "get": {
        "tags": [
          "Settings"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Settings/themoviedb": {
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "Save The Movie DB settings.",
        "requestBody": {
          "description": "The settings.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Settings.Models.External.TheMovieDbSettings"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Settings.Models.External.TheMovieDbSettings"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Settings.Models.External.TheMovieDbSettings"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Settings.Models.External.TheMovieDbSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Get The Movie DB settings.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Settings.Models.External.TheMovieDbSettings"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Settings/notifications/email": {
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "Saves the email notification settings.",
        "requestBody": {
          "description": "The model.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.UI.EmailNotificationsViewModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.UI.EmailNotificationsViewModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.UI.EmailNotificationsViewModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.UI.EmailNotificationsViewModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Gets the Email Notification Settings.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.UI.EmailNotificationsViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Settings/notifications/email/enabled": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Gets the Email Notification Settings.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Settings/notifications/discord": {
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "Saves the discord notification settings.",
        "requestBody": {
          "description": "The model.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.UI.DiscordNotificationsViewModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.UI.DiscordNotificationsViewModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.UI.DiscordNotificationsViewModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.UI.DiscordNotificationsViewModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Gets the discord Notification Settings.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.UI.DiscordNotificationsViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Settings/notifications/telegram": {
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "Saves the telegram notification settings.",
        "requestBody": {
          "description": "The model.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.UI.TelegramNotificationsViewModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.UI.TelegramNotificationsViewModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.UI.TelegramNotificationsViewModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.UI.TelegramNotificationsViewModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Gets the telegram Notification Settings.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.UI.TelegramNotificationsViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Settings/notifications/pushbullet": {
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "Saves the pushbullet notification settings.",
        "requestBody": {
          "description": "The model.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.UI.PushbulletNotificationViewModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.UI.PushbulletNotificationViewModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.UI.PushbulletNotificationViewModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.UI.PushbulletNotificationViewModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Gets the pushbullet Notification Settings.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.UI.PushbulletNotificationViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Settings/notifications/pushover": {
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "Saves the pushover notification settings.",
        "requestBody": {
          "description": "The model.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.UI.PushoverNotificationViewModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.UI.PushoverNotificationViewModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.UI.PushoverNotificationViewModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.UI.PushoverNotificationViewModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Gets the pushover Notification Settings.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.UI.PushoverNotificationViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Settings/notifications/slack": {
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "Saves the slack notification settings.",
        "requestBody": {
          "description": "The model.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.UI.SlackNotificationsViewModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.UI.SlackNotificationsViewModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.UI.SlackNotificationsViewModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.UI.SlackNotificationsViewModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Gets the slack Notification Settings.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.UI.SlackNotificationsViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Settings/notifications/mattermost": {
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "Saves the Mattermost notification settings.",
        "requestBody": {
          "description": "The model.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.UI.MattermostNotificationsViewModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.UI.MattermostNotificationsViewModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.UI.MattermostNotificationsViewModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.UI.MattermostNotificationsViewModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Gets the Mattermost Notification Settings.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.UI.MattermostNotificationsViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Settings/notifications/twilio": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Gets the Twilio Notification Settings.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.UI.TwilioSettingsViewModel"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "Saves the Mattermost notification settings.",
        "requestBody": {
          "description": "The model.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.UI.TwilioSettingsViewModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.UI.TwilioSettingsViewModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.UI.TwilioSettingsViewModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.UI.TwilioSettingsViewModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Settings/notifications/mobile": {
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "Saves the Mobile notification settings.",
        "requestBody": {
          "description": "The model.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.UI.MobileNotificationsViewModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.UI.MobileNotificationsViewModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.UI.MobileNotificationsViewModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.UI.MobileNotificationsViewModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Gets the Mobile Notification Settings.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.UI.MobileNotificationsViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Settings/notifications/gotify": {
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "Saves the gotify notification settings.",
        "requestBody": {
          "description": "The model.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.UI.GotifyNotificationViewModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.UI.GotifyNotificationViewModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.UI.GotifyNotificationViewModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.UI.GotifyNotificationViewModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Gets the gotify Notification Settings.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.UI.GotifyNotificationViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Settings/notifications/webhook": {
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "Saves the webhook notification settings.",
        "requestBody": {
          "description": "The model.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.UI.WebhookNotificationViewModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.UI.WebhookNotificationViewModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.UI.WebhookNotificationViewModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.UI.WebhookNotificationViewModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Gets the webhook notification settings.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.UI.WebhookNotificationViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Settings/notifications/newsletter": {
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "Saves the Newsletter notification settings.",
        "requestBody": {
          "description": "The model.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.UI.NewsletterNotificationViewModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.UI.NewsletterNotificationViewModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.UI.NewsletterNotificationViewModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.UI.NewsletterNotificationViewModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Gets the Newsletter Notification Settings.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.UI.NewsletterNotificationViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Sonarr/Profiles": {
      "post": {
        "tags": [
          "Sonarr"
        ],
        "summary": "Gets the Sonarr profiles.",
        "requestBody": {
          "description": "The settings.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.SonarrSettings"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.SonarrSettings"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.SonarrSettings"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.SonarrSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Api.Sonarr.Models.SonarrProfile"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Sonarr"
        ],
        "summary": "Gets the Sonarr profiles.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Api.Sonarr.Models.SonarrProfile"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Sonarr/RootFolders": {
      "post": {
        "tags": [
          "Sonarr"
        ],
        "summary": "Gets the Sonarr root folders.",
        "requestBody": {
          "description": "The settings.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.SonarrSettings"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.SonarrSettings"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.SonarrSettings"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.SonarrSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Api.Sonarr.Models.SonarrRootFolder"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Sonarr"
        ],
        "summary": "Gets the Sonarr root folders.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Api.Sonarr.Models.SonarrRootFolder"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Sonarr/v3/LanguageProfiles": {
      "get": {
        "tags": [
          "Sonarr"
        ],
        "summary": "Gets the Sonarr V3 language profiles",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Api.Sonarr.Models.V3.LanguageProfiles"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Sonarr"
        ],
        "summary": "Gets the Sonarr V3 language profiles",
        "requestBody": {
          "description": "The settings.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.SonarrSettings"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.SonarrSettings"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.SonarrSettings"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.SonarrSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Api.Sonarr.Models.V3.LanguageProfiles"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Sonarr/tags": {
      "post": {
        "tags": [
          "Sonarr"
        ],
        "summary": "Gets the Sonarr tags",
        "requestBody": {
          "description": "The settings.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.SonarrSettings"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.SonarrSettings"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.SonarrSettings"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.SonarrSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Api.Sonarr.Models.Tag"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Sonarr"
        ],
        "summary": "Gets the Sonarr tags",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Api.Sonarr.Models.Tag"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Sonarr/enabled": {
      "get": {
        "tags": [
          "Sonarr"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Stats": {
      "get": {
        "tags": [
          "Stats"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Engine.SummaryRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Engine.SummaryRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Engine.SummaryRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Engine.SummaryRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Engine.UserStatsSummary"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Status": {
      "get": {
        "tags": [
          "Status"
        ],
        "summary": "Gets the status of Ombi.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/System.Net.HttpStatusCode"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Status/info": {
      "get": {
        "tags": [
          "Status"
        ],
        "summary": "Returns information about this ombi instance",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/System/news": {
      "get": {
        "tags": [
          "System"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v2/System/logs": {
      "get": {
        "tags": [
          "System"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v2/System/logs/{logFileName}": {
      "get": {
        "tags": [
          "System"
        ],
        "parameters": [
          {
            "name": "logFileName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v2/System/logs/download/{logFileName}": {
      "get": {
        "tags": [
          "System"
        ],
        "parameters": [
          {
            "name": "logFileName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Tester/discord": {
      "post": {
        "tags": [
          "Tester"
        ],
        "summary": "Sends a test message to discord using the provided settings",
        "requestBody": {
          "description": "The settings.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.Notifications.DiscordNotificationSettings"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.Notifications.DiscordNotificationSettings"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.Notifications.DiscordNotificationSettings"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.Notifications.DiscordNotificationSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Tester/pushbullet": {
      "post": {
        "tags": [
          "Tester"
        ],
        "summary": "Sends a test message to Pushbullet using the provided settings",
        "requestBody": {
          "description": "The settings.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.Notifications.PushbulletSettings"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.Notifications.PushbulletSettings"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.Notifications.PushbulletSettings"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.Notifications.PushbulletSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Tester/pushover": {
      "post": {
        "tags": [
          "Tester"
        ],
        "summary": "Sends a test message to Pushover using the provided settings",
        "requestBody": {
          "description": "The settings.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.Notifications.PushoverSettings"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.Notifications.PushoverSettings"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.Notifications.PushoverSettings"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.Notifications.PushoverSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Tester/gotify": {
      "post": {
        "tags": [
          "Tester"
        ],
        "summary": "Sends a test message to Gotify using the provided settings",
        "requestBody": {
          "description": "The settings.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.Notifications.GotifySettings"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.Notifications.GotifySettings"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.Notifications.GotifySettings"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.Notifications.GotifySettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Tester/webhook": {
      "post": {
        "tags": [
          "Tester"
        ],
        "summary": "Sends a test message to configured webhook using the provided settings",
        "requestBody": {
          "description": "The settings.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.Notifications.WebhookSettings"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.Notifications.WebhookSettings"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.Notifications.WebhookSettings"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.Notifications.WebhookSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Tester/mattermost": {
      "post": {
        "tags": [
          "Tester"
        ],
        "summary": "Sends a test message to mattermost using the provided settings",
        "requestBody": {
          "description": "The settings.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.Notifications.MattermostNotificationSettings"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.Notifications.MattermostNotificationSettings"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.Notifications.MattermostNotificationSettings"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.Notifications.MattermostNotificationSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Tester/slack": {
      "post": {
        "tags": [
          "Tester"
        ],
        "summary": "Sends a test message to Slack using the provided settings",
        "requestBody": {
          "description": "The settings.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.Notifications.SlackNotificationSettings"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.Notifications.SlackNotificationSettings"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.Notifications.SlackNotificationSettings"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.Notifications.SlackNotificationSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Tester/email": {
      "post": {
        "tags": [
          "Tester"
        ],
        "summary": "Sends a test message via email to the admin email using the provided settings",
        "requestBody": {
          "description": "The settings.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.Notifications.EmailNotificationSettings"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.Notifications.EmailNotificationSettings"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.Notifications.EmailNotificationSettings"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.Notifications.EmailNotificationSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Tester/plex": {
      "post": {
        "tags": [
          "Tester"
        ],
        "summary": "Checks if we can connect to Plex with the provided settings",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Settings.Models.External.PlexServers"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Settings.Models.External.PlexServers"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Settings.Models.External.PlexServers"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Settings.Models.External.PlexServers"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Tester/emby": {
      "post": {
        "tags": [
          "Tester"
        ],
        "summary": "Checks if we can connect to Emby with the provided settings",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Settings.Models.External.EmbyServers"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Settings.Models.External.EmbyServers"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Settings.Models.External.EmbyServers"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Settings.Models.External.EmbyServers"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Tester/jellyfin": {
      "post": {
        "tags": [
          "Tester"
        ],
        "summary": "Checks if we can connect to Jellyfin with the provided settings",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Settings.Models.External.JellyfinServers"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Settings.Models.External.JellyfinServers"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Settings.Models.External.JellyfinServers"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Settings.Models.External.JellyfinServers"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Tester/radarr": {
      "post": {
        "tags": [
          "Tester"
        ],
        "summary": "Checks if we can connect to Radarr with the provided settings",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.RadarrSettings"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.RadarrSettings"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.RadarrSettings"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.RadarrSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.TesterResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Tester/sonarr": {
      "post": {
        "tags": [
          "Tester"
        ],
        "summary": "Checks if we can connect to Sonarr with the provided settings",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.SonarrSettings"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.SonarrSettings"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.SonarrSettings"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.SonarrSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.TesterResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Tester/couchpotato": {
      "post": {
        "tags": [
          "Tester"
        ],
        "summary": "Checks if we can connect to CouchPotato with the provided settings",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.CouchPotatoSettings"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.CouchPotatoSettings"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.CouchPotatoSettings"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.CouchPotatoSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Tester/telegram": {
      "post": {
        "tags": [
          "Tester"
        ],
        "summary": "Sends a test message to Telegram using the provided settings",
        "requestBody": {
          "description": "The settings.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.Notifications.TelegramSettings"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.Notifications.TelegramSettings"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.Notifications.TelegramSettings"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.Notifications.TelegramSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Tester/sickrage": {
      "post": {
        "tags": [
          "Tester"
        ],
        "summary": "Sends a test message to Slack using the provided settings",
        "requestBody": {
          "description": "The settings.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.SickRageSettings"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.SickRageSettings"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.SickRageSettings"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.SickRageSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Tester/newsletter": {
      "post": {
        "tags": [
          "Tester"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.UI.NewsletterNotificationViewModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.UI.NewsletterNotificationViewModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.UI.NewsletterNotificationViewModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.UI.NewsletterNotificationViewModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Tester/mobile": {
      "post": {
        "tags": [
          "Tester"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Models.MobileNotificationTestViewModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Models.MobileNotificationTestViewModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Models.MobileNotificationTestViewModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Models.MobileNotificationTestViewModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Tester/lidarr": {
      "post": {
        "tags": [
          "Tester"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.LidarrSettings"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.LidarrSettings"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.LidarrSettings"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.LidarrSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.TesterResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Tester/whatsapp": {
      "post": {
        "tags": [
          "Tester"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.UI.WhatsAppSettingsViewModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.UI.WhatsAppSettingsViewModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.UI.WhatsAppSettingsViewModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Core.Models.UI.WhatsAppSettingsViewModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/TheMovieDb/Keywords": {
      "get": {
        "tags": [
          "TheMovieDb"
        ],
        "summary": "Searches for keywords matching the specified term.",
        "parameters": [
          {
            "name": "searchTerm",
            "in": "query",
            "description": "The search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Api.TheMovieDb.Models.TheMovidDbKeyValue"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/TheMovieDb/Keywords/{keywordId}": {
      "get": {
        "tags": [
          "TheMovieDb"
        ],
        "summary": "Gets the keyword matching the specified ID.",
        "parameters": [
          {
            "name": "keywordId",
            "in": "path",
            "description": "The keyword ID.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/TheMovieDb/Genres/{media}": {
      "get": {
        "tags": [
          "TheMovieDb"
        ],
        "summary": "Gets the genres for either Tv or Movies depending on media type",
        "parameters": [
          {
            "name": "media",
            "in": "path",
            "description": "Either `tv` or `movie`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.TheMovieDbApi.Models.Genre"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/TheMovieDb/WatchProviders/movie": {
      "get": {
        "tags": [
          "TheMovieDb"
        ],
        "summary": "Searches for the watch providers matching the specified term.",
        "parameters": [
          {
            "name": "searchTerm",
            "in": "query",
            "description": "The search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Api.TheMovieDb.Models.WatchProvidersResults"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/TheMovieDb/WatchProviders/tv": {
      "get": {
        "tags": [
          "TheMovieDb"
        ],
        "summary": "Searches for the watch providers matching the specified term.",
        "parameters": [
          {
            "name": "searchTerm",
            "in": "query",
            "description": "The search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Api.TheMovieDb.Models.WatchProvidersResults"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Token": {
      "post": {
        "tags": [
          "Token"
        ],
        "summary": "Gets the token.",
        "requestBody": {
          "description": "The model.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Models.UserAuthModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Models.UserAuthModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Models.UserAuthModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Models.UserAuthModel"
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Token/plextoken": {
      "post": {
        "tags": [
          "Token"
        ],
        "summary": "Returns the Token for the Ombi User if we can match the Plex user with a valid Ombi User",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Models.External.PlexTokenAuthentication"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Models.External.PlexTokenAuthentication"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Models.External.PlexTokenAuthentication"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Models.External.PlexTokenAuthentication"
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Token/{pinId}": {
      "get": {
        "tags": [
          "Token"
        ],
        "parameters": [
          {
            "name": "pinId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Token/refresh": {
      "post": {
        "tags": [
          "Token"
        ],
        "summary": "Refreshes the token.",
        "requestBody": {
          "description": "The model.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Controllers.V1.TokenController+TokenRefresh"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Controllers.V1.TokenController+TokenRefresh"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Controllers.V1.TokenController+TokenRefresh"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Controllers.V1.TokenController+TokenRefresh"
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Token/requirePassword": {
      "post": {
        "tags": [
          "Token"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Models.UserAuthModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Models.UserAuthModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Models.UserAuthModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ombi.Models.UserAuthModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Update": {
      "get": {
        "tags": [
          "Update"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Processor.UpdateModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Vote": {
      "get": {
        "tags": [
          "Vote"
        ],
        "summary": "Returns the viewmodel to render on the UI",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Core.Models.UI.VoteViewModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Vote/up/movie/{requestId}": {
      "post": {
        "tags": [
          "Vote"
        ],
        "summary": "Upvotes a movie",
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.VoteEngineResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Vote/up/tv/{requestId}": {
      "post": {
        "tags": [
          "Vote"
        ],
        "summary": "Upvotes a tv show",
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.VoteEngineResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Vote/up/album/{requestId}": {
      "post": {
        "tags": [
          "Vote"
        ],
        "summary": "Upvotes a album",
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.VoteEngineResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Vote/down/movie/{requestId}": {
      "post": {
        "tags": [
          "Vote"
        ],
        "summary": "Downvotes a movie",
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.VoteEngineResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Vote/down/tv/{requestId}": {
      "post": {
        "tags": [
          "Vote"
        ],
        "summary": "Downvotes a tv show",
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.VoteEngineResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Vote/down/album/{requestId}": {
      "post": {
        "tags": [
          "Vote"
        ],
        "summary": "Downvotes a album",
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ombi.Core.Models.VoteEngineResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Vote/movie/{requestId}": {
      "get": {
        "tags": [
          "Vote"
        ],
        "summary": "Get's all the votes for the request id",
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Store.Entities.Votes"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Vote/music/{requestId}": {
      "get": {
        "tags": [
          "Vote"
        ],
        "summary": "Get's all the votes for the request id",
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Store.Entities.Votes"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Vote/tv/{requestId}": {
      "get": {
        "tags": [
          "Vote"
        ],
        "summary": "Get's all the votes for the request id",
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ombi.Store.Entities.Votes"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Ombi.Store.Entities.RequestType": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "Ombi.Core.Models.Search.V2.ExtraParams": {
        "type": "object",
        "properties": {
          "providerId": {
            "type": "integer",
            "format": "int32"
          },
          "overview": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Store.Entities.RequestType"
              }
            ]
          },
          "releaseDate": {
            "type": "string",
            "format": "date-time"
          },
          "requestStatus": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Core.Models.Search.V2.CalendarViewModel": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "backgroundColor": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Store.Entities.RequestType"
              }
            ]
          },
          "extraParams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ombi.Core.Models.Search.V2.ExtraParams"
            },
            "nullable": true
          },
          "borderColor": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Settings.Settings.Models.External.CouchPotatoSettings": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "apiKey": {
            "type": "string",
            "nullable": true
          },
          "defaultProfileId": {
            "type": "string",
            "nullable": true
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "ssl": {
            "type": "boolean"
          },
          "subDir": {
            "type": "string",
            "nullable": true
          },
          "ip": {
            "type": "string",
            "nullable": true
          },
          "port": {
            "type": "integer",
            "format": "int32"
          },
          "fullUri": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Api.CouchPotato.Models.ProfileList": {
        "type": "object",
        "properties": {
          "core": {
            "type": "boolean"
          },
          "hide": {
            "type": "boolean"
          },
          "_rev": {
            "type": "string",
            "nullable": true
          },
          "finish": {
            "type": "array",
            "items": {
              "type": "boolean"
            },
            "nullable": true
          },
          "qualities": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "_id": {
            "type": "string",
            "nullable": true
          },
          "_t": {
            "type": "string",
            "nullable": true
          },
          "label": {
            "type": "string",
            "nullable": true
          },
          "minimum_score": {
            "type": "integer",
            "format": "int32"
          },
          "stop_after": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "wait_for": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false
            },
            "nullable": true
          },
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "threeD": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Api.CouchPotato.Models.CouchPotatoProfiles": {
        "type": "object",
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ombi.Api.CouchPotato.Models.ProfileList"
            },
            "nullable": true
          },
          "success": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Api.CouchPotato.Models.CouchPotatoApiKey": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "apiKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Settings.Settings.Models.CustomPageSettings": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "html": {
            "type": "string",
            "nullable": true
          },
          "fontAwesomeIcon": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Core.Settings.Models.External.EmbySelectedLibraries": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "collectionType": {
            "type": "string",
            "nullable": true
          },
          "enabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Core.Settings.Models.External.EmbyServers": {
        "type": "object",
        "properties": {
          "serverId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "apiKey": {
            "type": "string",
            "nullable": true
          },
          "administratorId": {
            "type": "string",
            "nullable": true
          },
          "serverHostname": {
            "type": "string",
            "nullable": true
          },
          "enableEpisodeSearching": {
            "type": "boolean"
          },
          "embySelectedLibraries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ombi.Core.Settings.Models.External.EmbySelectedLibraries"
            },
            "nullable": true
          },
          "ssl": {
            "type": "boolean"
          },
          "subDir": {
            "type": "string",
            "nullable": true
          },
          "ip": {
            "type": "string",
            "nullable": true
          },
          "port": {
            "type": "integer",
            "format": "int32"
          },
          "fullUri": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Core.Settings.Models.External.EmbySettings": {
        "type": "object",
        "properties": {
          "enable": {
            "type": "boolean"
          },
          "servers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ombi.Core.Settings.Models.External.EmbyServers"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Api.Emby.Models.PublicInfo": {
        "type": "object",
        "properties": {
          "localAddress": {
            "type": "string",
            "nullable": true
          },
          "serverName": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "string",
            "nullable": true
          },
          "operatingSystem": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Models.External.UsersViewModel": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Api.Emby.Models.Media.MediaFolders": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "serverId": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "collectionType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Api.Emby.Models.EmbyItemContainer`1[[Ombi.Api.Emby.Models.Media.MediaFolders, Ombi.Api.Emby, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ombi.Api.Emby.Models.Media.MediaFolders"
            },
            "nullable": true
          },
          "totalRecordCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Store.Entities.UserType": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5
        ],
        "type": "integer",
        "format": "int32"
      },
      "Ombi.Models.ConnectedUsersViewModel": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "userType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Store.Entities.UserType"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "Ombi.Core.Models.UI.ClaimCheckboxes": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "nullable": true
          },
          "enabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Core.Models.UserType": {
        "enum": [
          1,
          2,
          3,
          5
        ],
        "type": "integer",
        "format": "int32"
      },
      "Ombi.Core.Models.RequestQuotaCountModel": {
        "type": "object",
        "properties": {
          "hasLimit": {
            "type": "boolean"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "remaining": {
            "type": "integer",
            "format": "int32"
          },
          "nextRequest": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Store.Entities.RequestLimitType": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "Ombi.Store.Entities.NotificationUserId": {
        "type": "object",
        "properties": {
          "playerId": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "nullable": true
          },
          "addedAt": {
            "type": "string",
            "format": "date-time"
          },
          "user": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Store.Entities.OmbiUser"
              }
            ],
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Helpers.NotificationAgent": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10
        ],
        "type": "integer",
        "format": "int32"
      },
      "Ombi.Store.Entities.UserNotificationPreferences": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "nullable": true
          },
          "agent": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Helpers.NotificationAgent"
              }
            ]
          },
          "enabled": {
            "type": "boolean"
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "user": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Store.Entities.OmbiUser"
              }
            ],
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Store.Entities.OmbiUser": {
        "required": [
          "streamingCountry"
        ],
        "type": "object",
        "properties": {
          "alias": {
            "type": "string",
            "nullable": true
          },
          "userType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Store.Entities.UserType"
              }
            ]
          },
          "providerUserId": {
            "type": "string",
            "nullable": true
          },
          "lastLoggedIn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "language": {
            "type": "string",
            "nullable": true
          },
          "streamingCountry": {
            "type": "string"
          },
          "movieRequestLimit": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "episodeRequestLimit": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "musicRequestLimit": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "movieRequestLimitType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Store.Entities.RequestLimitType"
              }
            ],
            "nullable": true
          },
          "episodeRequestLimitType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Store.Entities.RequestLimitType"
              }
            ],
            "nullable": true
          },
          "musicRequestLimitType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Store.Entities.RequestLimitType"
              }
            ],
            "nullable": true
          },
          "userAccessToken": {
            "type": "string",
            "nullable": true
          },
          "notificationUserIds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ombi.Store.Entities.NotificationUserId"
            },
            "nullable": true
          },
          "userNotificationPreferences": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ombi.Store.Entities.UserNotificationPreferences"
            },
            "nullable": true
          },
          "isEmbyConnect": {
            "type": "boolean",
            "readOnly": true
          },
          "userAlias": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "emailLogin": {
            "type": "boolean"
          },
          "isSystemUser": {
            "type": "boolean",
            "readOnly": true
          },
          "passwordHash": {
            "type": "string",
            "nullable": true
          },
          "securityStamp": {
            "type": "string",
            "nullable": true
          },
          "concurrencyStamp": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "normalizedUserName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "normalizedEmail": {
            "type": "string",
            "nullable": true
          },
          "emailConfirmed": {
            "type": "boolean"
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "phoneNumberConfirmed": {
            "type": "boolean"
          },
          "twoFactorEnabled": {
            "type": "boolean"
          },
          "lockoutEnd": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lockoutEnabled": {
            "type": "boolean"
          },
          "accessFailedCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Store.Entities.UserQualityProfiles": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "nullable": true
          },
          "sonarrQualityProfileAnime": {
            "type": "integer",
            "format": "int32"
          },
          "sonarrRootPathAnime": {
            "type": "integer",
            "format": "int32"
          },
          "sonarrRootPath": {
            "type": "integer",
            "format": "int32"
          },
          "sonarrQualityProfile": {
            "type": "integer",
            "format": "int32"
          },
          "radarrRootPath": {
            "type": "integer",
            "format": "int32"
          },
          "radarrQualityProfile": {
            "type": "integer",
            "format": "int32"
          },
          "user": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Store.Entities.OmbiUser"
              }
            ],
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Core.Models.UI.UserViewModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "alias": {
            "type": "string",
            "nullable": true
          },
          "claims": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ombi.Core.Models.UI.ClaimCheckboxes"
            },
            "nullable": true
          },
          "emailAddress": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "lastLoggedIn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "language": {
            "type": "string",
            "nullable": true
          },
          "hasLoggedIn": {
            "type": "boolean"
          },
          "userType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Core.Models.UserType"
              }
            ]
          },
          "movieRequestLimit": {
            "type": "integer",
            "format": "int32"
          },
          "episodeRequestLimit": {
            "type": "integer",
            "format": "int32"
          },
          "streamingCountry": {
            "type": "string",
            "nullable": true
          },
          "episodeRequestQuota": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Core.Models.RequestQuotaCountModel"
              }
            ],
            "nullable": true
          },
          "movieRequestQuota": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Core.Models.RequestQuotaCountModel"
              }
            ],
            "nullable": true
          },
          "musicRequestQuota": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Core.Models.RequestQuotaCountModel"
              }
            ],
            "nullable": true
          },
          "musicRequestLimit": {
            "type": "integer",
            "format": "int32"
          },
          "userQualityProfiles": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Store.Entities.UserQualityProfiles"
              }
            ],
            "nullable": true
          },
          "movieRequestLimitType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Store.Entities.RequestLimitType"
              }
            ]
          },
          "musicRequestLimitType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Store.Entities.RequestLimitType"
              }
            ]
          },
          "episodeRequestLimitType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Store.Entities.RequestLimitType"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "Ombi.Core.Models.UI.UserViewModelDropdown": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Models.Identity.IdentityResult": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "successful": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Models.Identity.UserLanguage": {
        "type": "object",
        "properties": {
          "lang": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Models.Identity.CountryStreamingPreference": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Models.Identity.UpdateLocalUserModel": {
        "type": "object",
        "properties": {
          "currentPassword": {
            "type": "string",
            "nullable": true
          },
          "confirmNewPassword": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "alias": {
            "type": "string",
            "nullable": true
          },
          "claims": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ombi.Core.Models.UI.ClaimCheckboxes"
            },
            "nullable": true
          },
          "emailAddress": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "lastLoggedIn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "language": {
            "type": "string",
            "nullable": true
          },
          "hasLoggedIn": {
            "type": "boolean"
          },
          "userType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Core.Models.UserType"
              }
            ]
          },
          "movieRequestLimit": {
            "type": "integer",
            "format": "int32"
          },
          "episodeRequestLimit": {
            "type": "integer",
            "format": "int32"
          },
          "streamingCountry": {
            "type": "string",
            "nullable": true
          },
          "episodeRequestQuota": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Core.Models.RequestQuotaCountModel"
              }
            ],
            "nullable": true
          },
          "movieRequestQuota": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Core.Models.RequestQuotaCountModel"
              }
            ],
            "nullable": true
          },
          "musicRequestQuota": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Core.Models.RequestQuotaCountModel"
              }
            ],
            "nullable": true
          },
          "musicRequestLimit": {
            "type": "integer",
            "format": "int32"
          },
          "userQualityProfiles": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Store.Entities.UserQualityProfiles"
              }
            ],
            "nullable": true
          },
          "movieRequestLimitType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Store.Entities.RequestLimitType"
              }
            ]
          },
          "musicRequestLimitType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Store.Entities.RequestLimitType"
              }
            ]
          },
          "episodeRequestLimitType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Store.Entities.RequestLimitType"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "Ombi.Models.Identity.AddNotificationPreference": {
        "type": "object",
        "properties": {
          "agent": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Helpers.NotificationAgent"
              }
            ]
          },
          "userId": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "enabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Microsoft.AspNetCore.Mvc.ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "Ombi.Store.Entities.Requests.IssueStatus": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "Ombi.Store.Entities.Requests.IssueCategory": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Store.Entities.Requests.IssueComments": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "issuesId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "issues": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Store.Entities.Requests.Issues"
              }
            ],
            "nullable": true
          },
          "user": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Store.Entities.OmbiUser"
              }
            ],
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Store.Entities.Requests.Issues": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "requestType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Store.Entities.RequestType"
              }
            ]
          },
          "providerId": {
            "type": "string",
            "nullable": true
          },
          "requestId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "subject": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "issueCategoryId": {
            "type": "integer",
            "format": "int32"
          },
          "issueCategory": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Store.Entities.Requests.IssueCategory"
              }
            ],
            "nullable": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Store.Entities.Requests.IssueStatus"
              }
            ]
          },
          "resovledDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "userReportedId": {
            "type": "string",
            "nullable": true
          },
          "userReported": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Store.Entities.OmbiUser"
              }
            ],
            "nullable": true
          },
          "comments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ombi.Store.Entities.Requests.IssueComments"
            },
            "nullable": true
          },
          "posterPath": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Core.Engine.V2.IssuesSummaryModel": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "providerId": {
            "type": "string",
            "nullable": true
          },
          "issues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ombi.Store.Entities.Requests.Issues"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Models.IssueCountModel": {
        "type": "object",
        "properties": {
          "pending": {
            "type": "integer",
            "format": "int32"
          },
          "inProgress": {
            "type": "integer",
            "format": "int32"
          },
          "resolved": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Models.IssueCommentChatViewModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "adminComment": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Models.NewIssueCommentViewModel": {
        "type": "object",
        "properties": {
          "comment": {
            "type": "string",
            "nullable": true
          },
          "issueId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Models.IssueStateViewModel": {
        "type": "object",
        "properties": {
          "issueId": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Store.Entities.Requests.IssueStatus"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "Ombi.Core.Settings.Models.External.JellyfinSelectedLibraries": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "collectionType": {
            "type": "string",
            "nullable": true
          },
          "enabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Core.Settings.Models.External.JellyfinServers": {
        "type": "object",
        "properties": {
          "serverId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "apiKey": {
            "type": "string",
            "nullable": true
          },
          "administratorId": {
            "type": "string",
            "nullable": true
          },
          "serverHostname": {
            "type": "string",
            "nullable": true
          },
          "enableEpisodeSearching": {
            "type": "boolean"
          },
          "jellyfinSelectedLibraries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ombi.Core.Settings.Models.External.JellyfinSelectedLibraries"
            },
            "nullable": true
          },
          "ssl": {
            "type": "boolean"
          },
          "subDir": {
            "type": "string",
            "nullable": true
          },
          "ip": {
            "type": "string",
            "nullable": true
          },
          "port": {
            "type": "integer",
            "format": "int32"
          },
          "fullUri": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Core.Settings.Models.External.JellyfinSettings": {
        "type": "object",
        "properties": {
          "enable": {
            "type": "boolean"
          },
          "servers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ombi.Core.Settings.Models.External.JellyfinServers"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Api.Jellyfin.Models.PublicInfo": {
        "type": "object",
        "properties": {
          "localAddress": {
            "type": "string",
            "nullable": true
          },
          "serverName": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "string",
            "nullable": true
          },
          "operatingSystem": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Api.Jellyfin.Models.MediaFolders": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "serverId": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "collectionType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Api.Jellyfin.Models.JellyfinItemContainer`1[[Ombi.Api.Jellyfin.Models.MediaFolders, Ombi.Api.Jellyfin, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ombi.Api.Jellyfin.Models.MediaFolders"
            },
            "nullable": true
          },
          "totalRecordCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Models.MediaSeverAvailibilityViewModel": {
        "type": "object",
        "properties": {
          "serversAvailable": {
            "type": "integer",
            "format": "int32"
          },
          "serversUnavailable": {
            "type": "integer",
            "format": "int32"
          },
          "partiallyDown": {
            "type": "boolean",
            "readOnly": true
          },
          "completelyDown": {
            "type": "boolean",
            "readOnly": true
          },
          "fullyAvailable": {
            "type": "boolean",
            "readOnly": true
          },
          "totalServers": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Settings.Settings.Models.External.LidarrSettings": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "apiKey": {
            "type": "string",
            "nullable": true
          },
          "defaultQualityProfile": {
            "type": "string",
            "nullable": true
          },
          "defaultRootPath": {
            "type": "string",
            "nullable": true
          },
          "albumFolder": {
            "type": "boolean"
          },
          "metadataProfileId": {
            "type": "integer",
            "format": "int32"
          },
          "addOnly": {
            "type": "boolean"
          },
          "ssl": {
            "type": "boolean"
          },
          "subDir": {
            "type": "string",
            "nullable": true
          },
          "ip": {
            "type": "string",
            "nullable": true
          },
          "port": {
            "type": "integer",
            "format": "int32"
          },
          "fullUri": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Api.Lidarr.Models.Quality": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Api.Lidarr.Models.Item": {
        "type": "object",
        "properties": {
          "quality": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Api.Lidarr.Models.Quality"
              }
            ],
            "nullable": true
          },
          "allowed": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Api.Lidarr.Models.LidarrProfile": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ombi.Api.Lidarr.Models.Item"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Api.Lidarr.Models.LidarrRootFolder": {
        "type": "object",
        "properties": {
          "path": {
            "type": "string",
            "nullable": true
          },
          "freeSpace": {
            "type": "integer",
            "format": "int64"
          },
          "unmappedFolders": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Api.Lidarr.Models.MetadataProfile": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Microsoft.Extensions.Logging.LogLevel": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6
        ],
        "type": "integer",
        "format": "int32"
      },
      "Ombi.Models.UiLoggingModel": {
        "type": "object",
        "properties": {
          "level": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Microsoft.Extensions.Logging.LogLevel"
              }
            ]
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "location": {
            "type": "string",
            "nullable": true
          },
          "stackTrace": {
            "type": "string",
            "nullable": true
          },
          "dateTime": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Store.Entities.Requests.AlbumRequest": {
        "type": "object",
        "properties": {
          "foreignAlbumId": {
            "type": "string",
            "nullable": true
          },
          "foreignArtistId": {
            "type": "string",
            "nullable": true
          },
          "disk": {
            "type": "string",
            "nullable": true
          },
          "cover": {
            "type": "string",
            "nullable": true
          },
          "rating": {
            "type": "number",
            "format": "double"
          },
          "releaseDate": {
            "type": "string",
            "format": "date-time"
          },
          "artistName": {
            "type": "string",
            "nullable": true
          },
          "subscribed": {
            "type": "boolean"
          },
          "showSubscribe": {
            "type": "boolean"
          },
          "requestStatus": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "approved": {
            "type": "boolean"
          },
          "markedAsApproved": {
            "type": "string",
            "format": "date-time"
          },
          "requestedDate": {
            "type": "string",
            "format": "date-time"
          },
          "available": {
            "type": "boolean"
          },
          "markedAsAvailable": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "requestedUserId": {
            "type": "string",
            "nullable": true
          },
          "denied": {
            "type": "boolean",
            "nullable": true
          },
          "markedAsDenied": {
            "type": "string",
            "format": "date-time"
          },
          "deniedReason": {
            "type": "string",
            "nullable": true
          },
          "requestType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Store.Entities.RequestType"
              }
            ]
          },
          "requestedByAlias": {
            "type": "string",
            "nullable": true
          },
          "requestedUser": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Store.Entities.OmbiUser"
              }
            ],
            "nullable": true
          },
          "canApprove": {
            "type": "boolean",
            "readOnly": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Core.Models.UI.RequestsViewModel`1[[Ombi.Store.Entities.Requests.AlbumRequest, Ombi.Store, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "collection": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ombi.Store.Entities.Requests.AlbumRequest"
            },
            "nullable": true
          },
          "total": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Core.Models.Requests.MusicAlbumRequestViewModel": {
        "type": "object",
        "properties": {
          "foreignAlbumId": {
            "type": "string",
            "nullable": true
          },
          "requestedByAlias": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Core.Engine.ErrorCode": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11
        ],
        "type": "integer",
        "format": "int32"
      },
      "Ombi.Core.Engine.RequestEngineResult": {
        "type": "object",
        "properties": {
          "result": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "isError": {
            "type": "boolean",
            "readOnly": true
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "errorCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Core.Engine.ErrorCode"
              }
            ],
            "nullable": true
          },
          "requestId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Core.Models.Requests.AlbumUpdateModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Core.Models.Requests.DenyAlbumModel": {
        "type": "object",
        "properties": {
          "reason": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Core.Models.MassEmailModel": {
        "type": "object",
        "properties": {
          "subject": {
            "type": "string",
            "nullable": true
          },
          "body": {
            "type": "string",
            "nullable": true
          },
          "bcc": {
            "type": "boolean"
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ombi.Store.Entities.OmbiUser"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Api.Plex.Models.UserRequest": {
        "type": "object",
        "properties": {
          "login": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Api.Plex.Models.Subscription": {
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "plan": {
            "type": "object",
            "additionalProperties": false,
            "nullable": true
          },
          "features": {
            "type": "object",
            "additionalProperties": false,
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Api.Plex.Models.Roles": {
        "type": "object",
        "properties": {
          "roles": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Api.Plex.Models.User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "uuid": {
            "type": "string",
            "nullable": true
          },
          "joined_at": {
            "type": "string",
            "nullable": true
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "thumb": {
            "type": "string",
            "nullable": true
          },
          "hasPassword": {
            "type": "string",
            "nullable": true
          },
          "authentication_token": {
            "type": "string",
            "nullable": true
          },
          "subscription": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Api.Plex.Models.Subscription"
              }
            ],
            "nullable": true
          },
          "roles": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Api.Plex.Models.Roles"
              }
            ],
            "nullable": true
          },
          "entitlements": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "confirmed_at": {
            "type": "object",
            "additionalProperties": false,
            "nullable": true
          },
          "forum_id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Api.Plex.Models.PlexAuthentication": {
        "type": "object",
        "properties": {
          "user": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Api.Plex.Models.User"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Core.Settings.Models.External.PlexSelectedLibraries": {
        "type": "object",
        "properties": {
          "key": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "enabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Core.Settings.Models.External.PlexServers": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "plexAuthToken": {
            "type": "string",
            "nullable": true
          },
          "machineIdentifier": {
            "type": "string",
            "nullable": true
          },
          "episodeBatchSize": {
            "type": "integer",
            "format": "int32"
          },
          "serverHostname": {
            "type": "string",
            "nullable": true
          },
          "plexSelectedLibraries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ombi.Core.Settings.Models.External.PlexSelectedLibraries"
            },
            "nullable": true
          },
          "ssl": {
            "type": "boolean"
          },
          "subDir": {
            "type": "string",
            "nullable": true
          },
          "ip": {
            "type": "string",
            "nullable": true
          },
          "port": {
            "type": "integer",
            "format": "int32"
          },
          "fullUri": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Api.Plex.Models.Location": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "path": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Api.Plex.Models.Genre": {
        "type": "object",
        "properties": {
          "tag": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Api.Plex.Models.Role": {
        "type": "object",
        "properties": {
          "tag": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Api.Plex.Models.Directory": {
        "type": "object",
        "properties": {
          "allowSync": {
            "type": "boolean"
          },
          "art": {
            "type": "string",
            "nullable": true
          },
          "composite": {
            "type": "string",
            "nullable": true
          },
          "filters": {
            "type": "boolean"
          },
          "refreshing": {
            "type": "boolean"
          },
          "thumb": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "agent": {
            "type": "string",
            "nullable": true
          },
          "scanner": {
            "type": "string",
            "nullable": true
          },
          "language": {
            "type": "string",
            "nullable": true
          },
          "uuid": {
            "type": "string",
            "nullable": true
          },
          "updatedAt": {
            "type": "integer",
            "format": "int32"
          },
          "createdAt": {
            "type": "integer",
            "format": "int32"
          },
          "location": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ombi.Api.Plex.Models.Location"
            },
            "nullable": true
          },
          "providerId": {
            "type": "string",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "nullable": true
          },
          "genre": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ombi.Api.Plex.Models.Genre"
            },
            "nullable": true
          },
          "role": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ombi.Api.Plex.Models.Role"
            },
            "nullable": true
          },
          "librarySectionID": {
            "type": "string",
            "nullable": true
          },
          "librarySectionTitle": {
            "type": "string",
            "nullable": true
          },
          "librarySectionUUID": {
            "type": "string",
            "nullable": true
          },
          "personal": {
            "type": "string",
            "nullable": true
          },
          "sourceTitle": {
            "type": "string",
            "nullable": true
          },
          "ratingKey": {
            "type": "string",
            "nullable": true
          },
          "studio": {
            "type": "string",
            "nullable": true
          },
          "seasons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ombi.Api.Plex.Models.Directory"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Api.Plex.Models.Medium": {
        "type": "object",
        "properties": {
          "videoResolution": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "duration": {
            "type": "integer",
            "format": "int32"
          },
          "bitrate": {
            "type": "integer",
            "format": "int32"
          },
          "width": {
            "type": "integer",
            "format": "int32"
          },
          "height": {
            "type": "integer",
            "format": "int32"
          },
          "aspectRatio": {
            "type": "number",
            "format": "float"
          },
          "audioChannels": {
            "type": "integer",
            "format": "int32"
          },
          "audioCodec": {
            "type": "string",
            "nullable": true
          },
          "videoCodec": {
            "type": "string",
            "nullable": true
          },
          "container": {
            "type": "string",
            "nullable": true
          },
          "videoFrameRate": {
            "type": "string",
            "nullable": true
          },
          "audioProfile": {
            "type": "string",
            "nullable": true
          },
          "videoProfile": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Api.Plex.Models.PlexGuids": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Api.Plex.Models.Metadata": {
        "type": "object",
        "properties": {
          "ratingKey": {
            "type": "integer",
            "format": "int32"
          },
          "key": {
            "type": "string",
            "nullable": true
          },
          "studio": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "contentRating": {
            "type": "string",
            "nullable": true
          },
          "summary": {
            "type": "string",
            "nullable": true
          },
          "index": {
            "type": "integer",
            "format": "int32"
          },
          "rating": {
            "type": "number",
            "format": "float"
          },
          "year": {
            "type": "integer",
            "format": "int32"
          },
          "thumb": {
            "type": "string",
            "nullable": true
          },
          "art": {
            "type": "string",
            "nullable": true
          },
          "banner": {
            "type": "string",
            "nullable": true
          },
          "theme": {
            "type": "string",
            "nullable": true
          },
          "leafCount": {
            "type": "integer",
            "format": "int32"
          },
          "viewedLeafCount": {
            "type": "integer",
            "format": "int32"
          },
          "childCount": {
            "type": "integer",
            "format": "int32"
          },
          "genre": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ombi.Api.Plex.Models.Genre"
            },
            "nullable": true
          },
          "primaryExtraKey": {
            "type": "string",
            "nullable": true
          },
          "parentRatingKey": {
            "type": "integer",
            "format": "int32"
          },
          "grandparentRatingKey": {
            "type": "integer",
            "format": "int32"
          },
          "guid": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ombi.Api.Plex.Models.PlexGuids"
            },
            "nullable": true
          },
          "librarySectionID": {
            "type": "integer",
            "format": "int32"
          },
          "librarySectionKey": {
            "type": "string",
            "nullable": true
          },
          "grandparentKey": {
            "type": "string",
            "nullable": true
          },
          "parentKey": {
            "type": "string",
            "nullable": true
          },
          "grandparentTitle": {
            "type": "string",
            "nullable": true
          },
          "parentTitle": {
            "type": "string",
            "nullable": true
          },
          "parentIndex": {
            "type": "integer",
            "format": "int32"
          },
          "parentThumb": {
            "type": "string",
            "nullable": true
          },
          "grandparentThumb": {
            "type": "string",
            "nullable": true
          },
          "grandparentArt": {
            "type": "string",
            "nullable": true
          },
          "grandparentTheme": {
            "type": "string",
            "nullable": true
          },
          "chapterSource": {
            "type": "string",
            "nullable": true
          },
          "media": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ombi.Api.Plex.Models.Medium"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Api.Plex.Models.Mediacontainer": {
        "type": "object",
        "properties": {
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "totalSize": {
            "type": "integer",
            "format": "int32"
          },
          "title1": {
            "type": "string",
            "nullable": true
          },
          "directory": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ombi.Api.Plex.Models.Directory"
            },
            "nullable": true
          },
          "art": {
            "type": "string",
            "nullable": true
          },
          "librarySectionID": {
            "type": "integer",
            "format": "int32"
          },
          "librarySectionTitle": {
            "type": "string",
            "nullable": true
          },
          "librarySectionUUID": {
            "type": "string",
            "nullable": true
          },
          "nocache": {
            "type": "boolean"
          },
          "thumb": {
            "type": "string",
            "nullable": true
          },
          "title2": {
            "type": "string",
            "nullable": true
          },
          "viewGroup": {
            "type": "string",
            "nullable": true
          },
          "viewMode": {
            "type": "integer",
            "format": "int32"
          },
          "metadata": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ombi.Api.Plex.Models.Metadata"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Api.Plex.Models.PlexContainer": {
        "type": "object",
        "properties": {
          "mediaContainer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Api.Plex.Models.Mediacontainer"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Models.External.PlexLibrariesResponse": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Api.Plex.Models.PlexContainer"
              }
            ],
            "nullable": true
          },
          "successful": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Api.Plex.Models.SectionLite": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Models.External.PlexLibrariesLiteResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ombi.Api.Plex.Models.SectionLite"
            },
            "nullable": true
          },
          "successful": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Models.External.PlexUserViewModel": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "nullable": true
          },
          "machineIdentifier": {
            "type": "string",
            "nullable": true
          },
          "libsSelected": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Api.Plex.Models.Server.ServerInfo": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "port": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "string",
            "nullable": true
          },
          "scheme": {
            "type": "string",
            "nullable": true
          },
          "host": {
            "type": "string",
            "nullable": true
          },
          "localAddresses": {
            "type": "string",
            "nullable": true
          },
          "machineIdentifier": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "nullable": true
          },
          "owned": {
            "type": "string",
            "nullable": true
          },
          "synced": {
            "type": "string",
            "nullable": true
          },
          "sourceTitle": {
            "type": "string",
            "nullable": true
          },
          "ownerId": {
            "type": "string",
            "nullable": true
          },
          "home": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Api.Plex.Models.Server.PlexServer": {
        "type": "object",
        "properties": {
          "server": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ombi.Api.Plex.Models.Server.ServerInfo"
            },
            "nullable": true
          },
          "friendlyName": {
            "type": "string",
            "nullable": true
          },
          "identifier": {
            "type": "string",
            "nullable": true
          },
          "machineIdentifier": {
            "type": "string",
            "nullable": true
          },
          "size": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Models.External.PlexServersViewModel": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "servers": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Api.Plex.Models.Server.PlexServer"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Api.Plex.Models.OAuth.Location": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "subdivisions": {
            "type": "string",
            "nullable": true
          },
          "coordinates": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Api.Plex.Models.OAuth.OAuthPin": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "trusted": {
            "type": "boolean"
          },
          "clientIdentifier": {
            "type": "string",
            "nullable": true
          },
          "location": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Api.Plex.Models.OAuth.Location"
              }
            ],
            "nullable": true
          },
          "expiresIn": {
            "type": "integer",
            "format": "int32"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time"
          },
          "authToken": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Models.PlexOAuthViewModel": {
        "type": "object",
        "properties": {
          "wizard": {
            "type": "boolean"
          },
          "pin": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Api.Plex.Models.OAuth.OAuthPin"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Settings.Settings.Models.External.RadarrSettings": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "apiKey": {
            "type": "string",
            "nullable": true
          },
          "defaultQualityProfile": {
            "type": "string",
            "nullable": true
          },
          "defaultRootPath": {
            "type": "string",
            "nullable": true
          },
          "addOnly": {
            "type": "boolean"
          },
          "minimumAvailability": {
            "type": "string",
            "nullable": true
          },
          "scanForAvailability": {
            "type": "boolean"
          },
          "ssl": {
            "type": "boolean"
          },
          "subDir": {
            "type": "string",
            "nullable": true
          },
          "ip": {
            "type": "string",
            "nullable": true
          },
          "port": {
            "type": "integer",
            "format": "int32"
          },
          "fullUri": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Api.Radarr.Models.RadarrRootFolder": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "freespace": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Settings.Settings.Models.External.SonarrSettings": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "apiKey": {
            "type": "string",
            "nullable": true
          },
          "qualityProfile": {
            "type": "string",
            "nullable": true
          },
          "seasonFolders": {
            "type": "boolean"
          },
          "rootPath": {
            "type": "string",
            "nullable": true
          },
          "qualityProfileAnime": {
            "type": "string",
            "nullable": true
          },
          "rootPathAnime": {
            "type": "string",
            "nullable": true
          },
          "addOnly": {
            "type": "boolean"
          },
          "v3": {
            "type": "boolean"
          },
          "languageProfile": {
            "type": "integer",
            "format": "int32"
          },
          "languageProfileAnime": {
            "type": "integer",
            "format": "int32"
          },
          "scanForAvailability": {
            "type": "boolean"
          },
          "ssl": {
            "type": "boolean"
          },
          "subDir": {
            "type": "string",
            "nullable": true
          },
          "ip": {
            "type": "string",
            "nullable": true
          },
          "port": {
            "type": "integer",
            "format": "int32"
          },
          "fullUri": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Api.Radarr.Models.Tag": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "label": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Core.Models.RecentlyAddedMovieModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "overview": {
            "type": "string",
            "nullable": true
          },
          "imdbId": {
            "type": "string",
            "nullable": true
          },
          "tvDbId": {
            "type": "string",
            "nullable": true
          },
          "theMovieDbId": {
            "type": "string",
            "nullable": true
          },
          "releaseYear": {
            "type": "string",
            "nullable": true
          },
          "addedAt": {
            "type": "string",
            "format": "date-time"
          },
          "quality": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Store.Entities.Requests.MovieRequests": {
        "type": "object",
        "properties": {
          "theMovieDbId": {
            "type": "integer",
            "format": "int32"
          },
          "issueId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "issues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ombi.Store.Entities.Requests.Issues"
            },
            "nullable": true
          },
          "subscribed": {
            "type": "boolean"
          },
          "showSubscribe": {
            "type": "boolean"
          },
          "rootPathOverride": {
            "type": "integer",
            "format": "int32"
          },
          "qualityOverride": {
            "type": "integer",
            "format": "int32"
          },
          "langCode": {
            "type": "string",
            "nullable": true
          },
          "languageCode": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "requestStatus": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "imdbId": {
            "type": "string",
            "nullable": true
          },
          "overview": {
            "type": "string",
            "nullable": true
          },
          "posterPath": {
            "type": "string",
            "nullable": true
          },
          "releaseDate": {
            "type": "string",
            "format": "date-time"
          },
          "digitalReleaseDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "background": {
            "type": "string",
            "nullable": true
          },
          "released": {
            "type": "boolean",
            "readOnly": true
          },
          "digitalRelease": {
            "type": "boolean",
            "readOnly": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "approved": {
            "type": "boolean"
          },
          "markedAsApproved": {
            "type": "string",
            "format": "date-time"
          },
          "requestedDate": {
            "type": "string",
            "format": "date-time"
          },
          "available": {
            "type": "boolean"
          },
          "markedAsAvailable": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "requestedUserId": {
            "type": "string",
            "nullable": true
          },
          "denied": {
            "type": "boolean",
            "nullable": true
          },
          "markedAsDenied": {
            "type": "string",
            "format": "date-time"
          },
          "deniedReason": {
            "type": "string",
            "nullable": true
          },
          "requestType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Store.Entities.RequestType"
              }
            ]
          },
          "requestedByAlias": {
            "type": "string",
            "nullable": true
          },
          "requestedUser": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Store.Entities.OmbiUser"
              }
            ],
            "nullable": true
          },
          "canApprove": {
            "type": "boolean",
            "readOnly": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Core.Models.UI.RequestsViewModel`1[[Ombi.Store.Entities.Requests.MovieRequests, Ombi.Store, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "collection": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ombi.Store.Entities.Requests.MovieRequests"
            },
            "nullable": true
          },
          "total": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Core.Models.Requests.MovieRequestViewModel": {
        "type": "object",
        "properties": {
          "theMovieDbId": {
            "type": "integer",
            "format": "int32"
          },
          "languageCode": {
            "type": "string",
            "nullable": true
          },
          "requestedByAlias": {
            "type": "string",
            "nullable": true
          },
          "requestOnBehalf": {
            "type": "string",
            "nullable": true
          },
          "rootFolderOverride": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "qualityPathOverride": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Core.Models.Requests.MovieUpdateModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Core.Models.Requests.DenyMovieModel": {
        "type": "object",
        "properties": {
          "reason": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Store.Entities.Requests.SeriesType": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "Ombi.Store.Repository.Requests.EpisodeRequests": {
        "type": "object",
        "properties": {
          "episodeNumber": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "airDate": {
            "type": "string",
            "format": "date-time"
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "available": {
            "type": "boolean"
          },
          "approved": {
            "type": "boolean"
          },
          "requested": {
            "type": "boolean"
          },
          "denied": {
            "type": "boolean",
            "nullable": true
          },
          "seasonId": {
            "type": "integer",
            "format": "int32"
          },
          "season": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Store.Repository.Requests.SeasonRequests"
              }
            ],
            "nullable": true
          },
          "airDateDisplay": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "requestStatus": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Store.Repository.Requests.SeasonRequests": {
        "type": "object",
        "properties": {
          "seasonNumber": {
            "type": "integer",
            "format": "int32"
          },
          "overview": {
            "type": "string",
            "nullable": true
          },
          "episodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ombi.Store.Repository.Requests.EpisodeRequests"
            },
            "nullable": true
          },
          "childRequestId": {
            "type": "integer",
            "format": "int32"
          },
          "childRequest": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Store.Entities.Requests.ChildRequests"
              }
            ],
            "nullable": true
          },
          "seasonAvailable": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Store.Entities.Requests.ChildRequests": {
        "type": "object",
        "properties": {
          "parentRequest": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Store.Entities.Requests.TvRequests"
              }
            ],
            "nullable": true
          },
          "parentRequestId": {
            "type": "integer",
            "format": "int32"
          },
          "issueId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "seriesType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Store.Entities.Requests.SeriesType"
              }
            ]
          },
          "subscribed": {
            "type": "boolean"
          },
          "showSubscribe": {
            "type": "boolean"
          },
          "releaseYear": {
            "type": "string",
            "format": "date-time"
          },
          "issues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ombi.Store.Entities.Requests.Issues"
            },
            "nullable": true
          },
          "seasonRequests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ombi.Store.Repository.Requests.SeasonRequests"
            },
            "nullable": true
          },
          "requestStatus": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "approved": {
            "type": "boolean"
          },
          "markedAsApproved": {
            "type": "string",
            "format": "date-time"
          },
          "requestedDate": {
            "type": "string",
            "format": "date-time"
          },
          "available": {
            "type": "boolean"
          },
          "markedAsAvailable": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "requestedUserId": {
            "type": "string",
            "nullable": true
          },
          "denied": {
            "type": "boolean",
            "nullable": true
          },
          "markedAsDenied": {
            "type": "string",
            "format": "date-time"
          },
          "deniedReason": {
            "type": "string",
            "nullable": true
          },
          "requestType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Store.Entities.RequestType"
              }
            ]
          },
          "requestedByAlias": {
            "type": "string",
            "nullable": true
          },
          "requestedUser": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Store.Entities.OmbiUser"
              }
            ],
            "nullable": true
          },
          "canApprove": {
            "type": "boolean",
            "readOnly": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Store.Entities.Requests.TvRequests": {
        "type": "object",
        "properties": {
          "tvDbId": {
            "type": "integer",
            "format": "int32"
          },
          "externalProviderId": {
            "type": "integer",
            "format": "int32"
          },
          "imdbId": {
            "type": "string",
            "nullable": true
          },
          "qualityOverride": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rootFolder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "languageProfile": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "overview": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "posterPath": {
            "type": "string",
            "nullable": true
          },
          "background": {
            "type": "string",
            "nullable": true
          },
          "releaseDate": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "totalSeasons": {
            "type": "integer",
            "format": "int32"
          },
          "childRequests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ombi.Store.Entities.Requests.ChildRequests"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Core.Models.UI.RequestsViewModel`1[[Ombi.Store.Entities.Requests.TvRequests, Ombi.Store, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "collection": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ombi.Store.Entities.Requests.TvRequests"
            },
            "nullable": true
          },
          "total": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Core.Models.Requests.EpisodesViewModel": {
        "type": "object",
        "properties": {
          "episodeNumber": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Core.Models.Requests.SeasonsViewModel": {
        "type": "object",
        "properties": {
          "seasonNumber": {
            "type": "integer",
            "format": "int32"
          },
          "episodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ombi.Core.Models.Requests.EpisodesViewModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Core.Models.Requests.TvRequestViewModel": {
        "type": "object",
        "properties": {
          "tvDbId": {
            "type": "integer",
            "format": "int32"
          },
          "requestAll": {
            "type": "boolean"
          },
          "latestSeason": {
            "type": "boolean"
          },
          "languageProfile": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "firstSeason": {
            "type": "boolean"
          },
          "seasons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ombi.Core.Models.Requests.SeasonsViewModel"
            },
            "nullable": true
          },
          "requestedByAlias": {
            "type": "string",
            "nullable": true
          },
          "requestOnBehalf": {
            "type": "string",
            "nullable": true
          },
          "rootFolderOverride": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "qualityPathOverride": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Models.DenyTvModel": {
        "type": "object",
        "properties": {
          "reason": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Models.TvUpdateModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Core.Models.Requests.RequestCountModel": {
        "type": "object",
        "properties": {
          "pending": {
            "type": "integer",
            "format": "int32"
          },
          "approved": {
            "type": "integer",
            "format": "int32"
          },
          "available": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Models.FailedRequestViewModel": {
        "type": "object",
        "properties": {
          "failedId": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "releaseYear": {
            "type": "string",
            "format": "date-time"
          },
          "requestId": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Store.Entities.RequestType"
              }
            ]
          },
          "dts": {
            "type": "string",
            "format": "date-time"
          },
          "error": {
            "type": "string",
            "nullable": true
          },
          "retryCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Core.Models.UI.RequestsViewModel`1[[Ombi.Store.Entities.Requests.ChildRequests, Ombi.Store, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "collection": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ombi.Store.Entities.Requests.ChildRequests"
            },
            "nullable": true
          },
          "total": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Core.Models.Requests.MediaAdvancedOptions": {
        "type": "object",
        "properties": {
          "requestId": {
            "type": "integer",
            "format": "int32"
          },
          "rootPathOverride": {
            "type": "integer",
            "format": "int32"
          },
          "qualityOverride": {
            "type": "integer",
            "format": "int32"
          },
          "languageProfile": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Core.Models.Requests.TvRequestViewModelV2": {
        "type": "object",
        "properties": {
          "theMovieDbId": {
            "type": "integer",
            "format": "int32"
          },
          "languageCode": {
            "type": "string",
            "nullable": true
          },
          "requestAll": {
            "type": "boolean"
          },
          "latestSeason": {
            "type": "boolean"
          },
          "languageProfile": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "firstSeason": {
            "type": "boolean"
          },
          "seasons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ombi.Core.Models.Requests.SeasonsViewModel"
            },
            "nullable": true
          },
          "requestedByAlias": {
            "type": "string",
            "nullable": true
          },
          "requestOnBehalf": {
            "type": "string",
            "nullable": true
          },
          "rootFolderOverride": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "qualityPathOverride": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Core.Models.Search.V2.MultiSearchFilter": {
        "type": "object",
        "properties": {
          "movies": {
            "type": "boolean"
          },
          "tvShows": {
            "type": "boolean"
          },
          "music": {
            "type": "boolean"
          },
          "people": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Core.Models.Search.V2.MultiSearchResult": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "mediaType": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "poster": {
            "type": "string",
            "nullable": true
          },
          "overview": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Core.Models.Search.V2.CollectionsViewModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "posterPath": {
            "type": "string",
            "nullable": true
          },
          "backdropPath": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Core.Models.Search.V2.GenreViewModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Core.Models.Search.V2.ProductionCompaniesViewModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "logo_path": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "origin_country": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Core.Models.Search.V2.VideoResultsDetails": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "iso_639_1": {
            "type": "string",
            "nullable": true
          },
          "iso_3166_1": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "site": {
            "type": "string",
            "nullable": true
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Core.Models.Search.V2.Videos": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ombi.Core.Models.Search.V2.VideoResultsDetails"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Core.Models.Search.V2.FullMovieCastViewModel": {
        "type": "object",
        "properties": {
          "cast_id": {
            "type": "integer",
            "format": "int32"
          },
          "character": {
            "type": "string",
            "nullable": true
          },
          "credit_id": {
            "type": "string",
            "nullable": true
          },
          "gender": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "profile_path": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Core.Models.Search.V2.FullMovieCrewViewModel": {
        "type": "object",
        "properties": {
          "credit_id": {
            "type": "string",
            "nullable": true
          },
          "department": {
            "type": "string",
            "nullable": true
          },
          "gender": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "job": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "profile_path": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Core.Models.Search.V2.CreditsViewModel": {
        "type": "object",
        "properties": {
          "cast": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ombi.Core.Models.Search.V2.FullMovieCastViewModel"
            },
            "nullable": true
          },
          "crew": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ombi.Core.Models.Search.V2.FullMovieCrewViewModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Api.TheMovieDb.Models.ReleaseDateType": {
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6
        ],
        "type": "integer",
        "format": "int32"
      },
      "Ombi.Api.TheMovieDb.Models.ReleaseDateDto": {
        "type": "object",
        "properties": {
          "releaseDate": {
            "type": "string",
            "format": "date-time"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Api.TheMovieDb.Models.ReleaseDateType"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "Ombi.Api.TheMovieDb.Models.ReleaseResultsDto": {
        "type": "object",
        "properties": {
          "isoCode": {
            "type": "string",
            "nullable": true
          },
          "releaseDate": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ombi.Api.TheMovieDb.Models.ReleaseDateDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Api.TheMovieDb.Models.ReleaseDatesDto": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ombi.Api.TheMovieDb.Models.ReleaseResultsDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Api.TheMovieDb.Models.SimilarResults": {
        "type": "object",
        "properties": {
          "adult": {
            "type": "boolean"
          },
          "backdrop_path": {
            "type": "string",
            "nullable": true
          },
          "genre_ids": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "original_language": {
            "type": "string",
            "nullable": true
          },
          "original_title": {
            "type": "string",
            "nullable": true
          },
          "overview": {
            "type": "string",
            "nullable": true
          },
          "poster_path": {
            "type": "string",
            "nullable": true
          },
          "release_date": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "video": {
            "type": "boolean"
          },
          "vote_average": {
            "type": "number",
            "format": "float"
          },
          "vote_count": {
            "type": "integer",
            "format": "int32"
          },
          "popularity": {
            "type": "number",
            "format": "float"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Api.TheMovieDb.Models.Similar": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ombi.Api.TheMovieDb.Models.SimilarResults"
            },
            "nullable": true
          },
          "total_pages": {
            "type": "integer",
            "format": "int32"
          },
          "total_results": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Api.TheMovieDb.Models.RecommendationResults": {
        "type": "object",
        "properties": {
          "adult": {
            "type": "boolean"
          },
          "backdrop_path": {
            "type": "string",
            "nullable": true
          },
          "genre_ids": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "original_language": {
            "type": "string",
            "nullable": true
          },
          "original_title": {
            "type": "string",
            "nullable": true
          },
          "overview": {
            "type": "string",
            "nullable": true
          },
          "poster_path": {
            "type": "string",
            "nullable": true
          },
          "release_date": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "video": {
            "type": "boolean"
          },
          "vote_average": {
            "type": "number",
            "format": "float"
          },
          "vote_count": {
            "type": "integer",
            "format": "int32"
          },
          "popularity": {
            "type": "number",
            "format": "float"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Api.TheMovieDb.Models.Recommendations": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ombi.Api.TheMovieDb.Models.RecommendationResults"
            },
            "nullable": true
          },
          "total_pages": {
            "type": "integer",
            "format": "int32"
          },
          "total_results": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Core.Models.Search.V2.ExternalIds": {
        "type": "object",
        "properties": {
          "imdbId": {
            "type": "string",
            "nullable": true
          },
          "facebookId": {
            "type": "string",
            "nullable": true
          },
          "instagramId": {
            "type": "string",
            "nullable": true
          },
          "twitterId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Core.Models.Search.V2.KeywordsValue": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Core.Models.Search.V2.Keywords": {
        "type": "object",
        "properties": {
          "keywordsValue": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ombi.Core.Models.Search.V2.KeywordsValue"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Core.Models.Search.V2.MovieFullInfoViewModel": {
        "type": "object",
        "properties": {
          "adult": {
            "type": "boolean"
          },
          "belongsToCollection": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Core.Models.Search.V2.CollectionsViewModel"
              }
            ],
            "nullable": true
          },
          "backdropPath": {
            "type": "string",
            "nullable": true
          },
          "originalLanguage": {
            "type": "string",
            "nullable": true
          },
          "budget": {
            "type": "integer",
            "format": "int32"
          },
          "genres": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ombi.Core.Models.Search.V2.GenreViewModel"
            },
            "nullable": true
          },
          "originalTitle": {
            "type": "string",
            "nullable": true
          },
          "overview": {
            "type": "string",
            "nullable": true
          },
          "productionCompanies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ombi.Core.Models.Search.V2.ProductionCompaniesViewModel"
            },
            "nullable": true
          },
          "popularity": {
            "type": "number",
            "format": "double"
          },
          "revenue": {
            "type": "number",
            "format": "float"
          },
          "runtime": {
            "type": "integer",
            "format": "int64"
          },
          "posterPath": {
            "type": "string",
            "nullable": true
          },
          "releaseDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "video": {
            "type": "boolean"
          },
          "tagline": {
            "type": "string",
            "nullable": true
          },
          "voteAverage": {
            "type": "number",
            "format": "double"
          },
          "voteCount": {
            "type": "integer",
            "format": "int32"
          },
          "alreadyInCp": {
            "type": "boolean"
          },
          "trailer": {
            "type": "string",
            "nullable": true
          },
          "homepage": {
            "type": "string",
            "nullable": true
          },
          "rootPathOverride": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "videos": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Core.Models.Search.V2.Videos"
              }
            ],
            "nullable": true
          },
          "credits": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Core.Models.Search.V2.CreditsViewModel"
              }
            ],
            "nullable": true
          },
          "qualityOverride": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Store.Entities.RequestType"
              }
            ],
            "readOnly": true
          },
          "releaseDates": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Api.TheMovieDb.Models.ReleaseDatesDto"
              }
            ],
            "nullable": true
          },
          "digitalReleaseDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "similar": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Api.TheMovieDb.Models.Similar"
              }
            ],
            "nullable": true
          },
          "recommendations": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Api.TheMovieDb.Models.Recommendations"
              }
            ],
            "nullable": true
          },
          "externalIds": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Core.Models.Search.V2.ExternalIds"
              }
            ],
            "nullable": true
          },
          "keywords": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Core.Models.Search.V2.Keywords"
              }
            ],
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "approved": {
            "type": "boolean"
          },
          "denied": {
            "type": "boolean",
            "nullable": true
          },
          "deniedReason": {
            "type": "string",
            "nullable": true
          },
          "requested": {
            "type": "boolean"
          },
          "requestId": {
            "type": "integer",
            "format": "int32"
          },
          "available": {
            "type": "boolean"
          },
          "plexUrl": {
            "type": "string",
            "nullable": true
          },
          "embyUrl": {
            "type": "string",
            "nullable": true
          },
          "jellyfinUrl": {
            "type": "string",
            "nullable": true
          },
          "quality": {
            "type": "string",
            "nullable": true
          },
          "imdbId": {
            "type": "string",
            "nullable": true
          },
          "theTvDbId": {
            "type": "string",
            "nullable": true
          },
          "theMovieDbId": {
            "type": "string",
            "nullable": true
          },
          "subscribed": {
            "type": "boolean"
          },
          "showSubscribe": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Core.Models.Search.V2.MovieCollection": {
        "type": "object",
        "properties": {
          "overview": {
            "type": "string",
            "nullable": true
          },
          "posterPath": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "releaseDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Store.Entities.RequestType"
              }
            ],
            "readOnly": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "approved": {
            "type": "boolean"
          },
          "denied": {
            "type": "boolean",
            "nullable": true
          },
          "deniedReason": {
            "type": "string",
            "nullable": true
          },
          "requested": {
            "type": "boolean"
          },
          "requestId": {
            "type": "integer",
            "format": "int32"
          },
          "available": {
            "type": "boolean"
          },
          "plexUrl": {
            "type": "string",
            "nullable": true
          },
          "embyUrl": {
            "type": "string",
            "nullable": true
          },
          "jellyfinUrl": {
            "type": "string",
            "nullable": true
          },
          "quality": {
            "type": "string",
            "nullable": true
          },
          "imdbId": {
            "type": "string",
            "nullable": true
          },
          "theTvDbId": {
            "type": "string",
            "nullable": true
          },
          "theMovieDbId": {
            "type": "string",
            "nullable": true
          },
          "subscribed": {
            "type": "boolean"
          },
          "showSubscribe": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Core.Models.Search.V2.MovieCollectionsViewModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "overview": {
            "type": "string",
            "nullable": true
          },
          "collection": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ombi.Core.Models.Search.V2.MovieCollection"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Core.Models.Search.V2.NetworkViewModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Core.Models.Search.V2.Images": {
        "type": "object",
        "properties": {
          "medium": {
            "type": "string",
            "nullable": true
          },
          "original": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Core.Models.Search.V2.CastViewModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "person": {
            "type": "string",
            "nullable": true
          },
          "character": {
            "type": "string",
            "nullable": true
          },
          "image": {
            "type": "string",
            "nullable": true
          },
          "self": {
            "type": "boolean"
          },
          "voice": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Core.Models.Search.V2.PersonViewModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "image": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Core.Models.Search.V2.SearchFullInfoTvShowViewModel": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "aliases": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "banner": {
            "type": "string",
            "nullable": true
          },
          "seriesId": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "firstAired": {
            "type": "string",
            "nullable": true
          },
          "networkId": {
            "type": "string",
            "nullable": true
          },
          "runtime": {
            "type": "string",
            "nullable": true
          },
          "genres": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ombi.Core.Models.Search.V2.GenreViewModel"
            },
            "nullable": true
          },
          "overview": {
            "type": "string",
            "nullable": true
          },
          "lastUpdated": {
            "type": "integer",
            "format": "int32"
          },
          "airsDayOfWeek": {
            "type": "string",
            "nullable": true
          },
          "airsTime": {
            "type": "string",
            "nullable": true
          },
          "rating": {
            "type": "string",
            "nullable": true
          },
          "siteRating": {
            "type": "integer",
            "format": "int32"
          },
          "network": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Core.Models.Search.V2.NetworkViewModel"
              }
            ],
            "nullable": true
          },
          "images": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Core.Models.Search.V2.Images"
              }
            ],
            "nullable": true
          },
          "cast": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ombi.Core.Models.Search.V2.CastViewModel"
            },
            "nullable": true
          },
          "crew": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ombi.Core.Models.Search.V2.PersonViewModel"
            },
            "nullable": true
          },
          "certification": {
            "type": "string",
            "nullable": true
          },
          "tagline": {
            "type": "string",
            "nullable": true
          },
          "keywords": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Core.Models.Search.V2.Keywords"
              }
            ],
            "nullable": true
          },
          "externalIds": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Core.Models.Search.V2.ExternalIds"
              }
            ],
            "nullable": true
          },
          "trailer": {
            "type": "string",
            "nullable": true
          },
          "homepage": {
            "type": "string",
            "nullable": true
          },
          "seasonRequests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ombi.Store.Repository.Requests.SeasonRequests"
            },
            "nullable": true
          },
          "requestAll": {
            "type": "boolean"
          },
          "firstSeason": {
            "type": "boolean"
          },
          "latestSeason": {
            "type": "boolean"
          },
          "fullyAvailable": {
            "type": "boolean"
          },
          "partlyAvailable": {
            "type": "boolean"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Store.Entities.RequestType"
              }
            ],
            "readOnly": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "approved": {
            "type": "boolean"
          },
          "denied": {
            "type": "boolean",
            "nullable": true
          },
          "deniedReason": {
            "type": "string",
            "nullable": true
          },
          "requested": {
            "type": "boolean"
          },
          "requestId": {
            "type": "integer",
            "format": "int32"
          },
          "available": {
            "type": "boolean"
          },
          "plexUrl": {
            "type": "string",
            "nullable": true
          },
          "embyUrl": {
            "type": "string",
            "nullable": true
          },
          "jellyfinUrl": {
            "type": "string",
            "nullable": true
          },
          "quality": {
            "type": "string",
            "nullable": true
          },
          "imdbId": {
            "type": "string",
            "nullable": true
          },
          "theTvDbId": {
            "type": "string",
            "nullable": true
          },
          "theMovieDbId": {
            "type": "string",
            "nullable": true
          },
          "subscribed": {
            "type": "boolean"
          },
          "showSubscribe": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Models.SimilarMoviesRefineModel": {
        "type": "object",
        "properties": {
          "theMovieDbId": {
            "type": "integer",
            "format": "int32"
          },
          "languageCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Core.Models.Search.SearchMovieViewModel": {
        "type": "object",
        "properties": {
          "adult": {
            "type": "boolean"
          },
          "backdropPath": {
            "type": "string",
            "nullable": true
          },
          "genreIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "originalLanguage": {
            "type": "string",
            "nullable": true
          },
          "originalTitle": {
            "type": "string",
            "nullable": true
          },
          "overview": {
            "type": "string",
            "nullable": true
          },
          "popularity": {
            "type": "number",
            "format": "double"
          },
          "posterPath": {
            "type": "string",
            "nullable": true
          },
          "releaseDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "video": {
            "type": "boolean"
          },
          "voteAverage": {
            "type": "number",
            "format": "double"
          },
          "voteCount": {
            "type": "integer",
            "format": "int32"
          },
          "alreadyInCp": {
            "type": "boolean"
          },
          "trailer": {
            "type": "string",
            "nullable": true
          },
          "homepage": {
            "type": "string",
            "nullable": true
          },
          "rootPathOverride": {
            "type": "integer",
            "format": "int32"
          },
          "qualityOverride": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Store.Entities.RequestType"
              }
            ],
            "readOnly": true
          },
          "releaseDates": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Api.TheMovieDb.Models.ReleaseDatesDto"
              }
            ],
            "nullable": true
          },
          "digitalReleaseDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "approved": {
            "type": "boolean"
          },
          "denied": {
            "type": "boolean",
            "nullable": true
          },
          "deniedReason": {
            "type": "string",
            "nullable": true
          },
          "requested": {
            "type": "boolean"
          },
          "requestId": {
            "type": "integer",
            "format": "int32"
          },
          "available": {
            "type": "boolean"
          },
          "plexUrl": {
            "type": "string",
            "nullable": true
          },
          "embyUrl": {
            "type": "string",
            "nullable": true
          },
          "jellyfinUrl": {
            "type": "string",
            "nullable": true
          },
          "quality": {
            "type": "string",
            "nullable": true
          },
          "imdbId": {
            "type": "string",
            "nullable": true
          },
          "theTvDbId": {
            "type": "string",
            "nullable": true
          },
          "theMovieDbId": {
            "type": "string",
            "nullable": true
          },
          "subscribed": {
            "type": "boolean"
          },
          "showSubscribe": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Api.TheMovieDb.Models.DiscoverModel": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "releaseYear": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "genreIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "keywordIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "watchProviders": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "companies": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Core.Models.Search.SearchTvShowViewModel": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "aliases": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "banner": {
            "type": "string",
            "nullable": true
          },
          "seriesId": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "firstAired": {
            "type": "string",
            "nullable": true
          },
          "network": {
            "type": "string",
            "nullable": true
          },
          "networkId": {
            "type": "string",
            "nullable": true
          },
          "runtime": {
            "type": "string",
            "nullable": true
          },
          "genre": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "overview": {
            "type": "string",
            "nullable": true
          },
          "lastUpdated": {
            "type": "integer",
            "format": "int32"
          },
          "airsDayOfWeek": {
            "type": "string",
            "nullable": true
          },
          "airsTime": {
            "type": "string",
            "nullable": true
          },
          "rating": {
            "type": "string",
            "nullable": true
          },
          "siteRating": {
            "type": "integer",
            "format": "int32"
          },
          "trailer": {
            "type": "string",
            "nullable": true
          },
          "homepage": {
            "type": "string",
            "nullable": true
          },
          "seasonRequests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ombi.Store.Repository.Requests.SeasonRequests"
            },
            "nullable": true
          },
          "requestAll": {
            "type": "boolean"
          },
          "firstSeason": {
            "type": "boolean"
          },
          "latestSeason": {
            "type": "boolean"
          },
          "fullyAvailable": {
            "type": "boolean"
          },
          "partlyAvailable": {
            "type": "boolean"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Store.Entities.RequestType"
              }
            ],
            "readOnly": true
          },
          "backdropPath": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "approved": {
            "type": "boolean"
          },
          "denied": {
            "type": "boolean",
            "nullable": true
          },
          "deniedReason": {
            "type": "string",
            "nullable": true
          },
          "requested": {
            "type": "boolean"
          },
          "requestId": {
            "type": "integer",
            "format": "int32"
          },
          "available": {
            "type": "boolean"
          },
          "plexUrl": {
            "type": "string",
            "nullable": true
          },
          "embyUrl": {
            "type": "string",
            "nullable": true
          },
          "jellyfinUrl": {
            "type": "string",
            "nullable": true
          },
          "quality": {
            "type": "string",
            "nullable": true
          },
          "imdbId": {
            "type": "string",
            "nullable": true
          },
          "theTvDbId": {
            "type": "string",
            "nullable": true
          },
          "theMovieDbId": {
            "type": "string",
            "nullable": true
          },
          "subscribed": {
            "type": "boolean"
          },
          "showSubscribe": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Api.TheMovieDb.Models.Cast": {
        "type": "object",
        "properties": {
          "character": {
            "type": "string",
            "nullable": true
          },
          "credit_id": {
            "type": "string",
            "nullable": true
          },
          "poster_path": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "video": {
            "type": "boolean"
          },
          "vote_count": {
            "type": "integer",
            "format": "int32"
          },
          "adult": {
            "type": "boolean"
          },
          "backdrop_path": {
            "type": "string",
            "nullable": true
          },
          "genre_ids": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "original_language": {
            "type": "string",
            "nullable": true
          },
          "original_title": {
            "type": "string",
            "nullable": true
          },
          "popularity": {
            "type": "number",
            "format": "float"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "vote_average": {
            "type": "number",
            "format": "float"
          },
          "overview": {
            "type": "string",
            "nullable": true
          },
          "release_date": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Api.TheMovieDb.Models.Crew": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "department": {
            "type": "string",
            "nullable": true
          },
          "original_language": {
            "type": "string",
            "nullable": true
          },
          "original_title": {
            "type": "string",
            "nullable": true
          },
          "job": {
            "type": "string",
            "nullable": true
          },
          "overview": {
            "type": "string",
            "nullable": true
          },
          "vote_count": {
            "type": "integer",
            "format": "int32"
          },
          "video": {
            "type": "boolean"
          },
          "release_date": {
            "type": "string",
            "nullable": true
          },
          "vote_average": {
            "type": "number",
            "format": "float"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "popularity": {
            "type": "number",
            "format": "float"
          },
          "genre_ids": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "backdrop_path": {
            "type": "string",
            "nullable": true
          },
          "adult": {
            "type": "boolean"
          },
          "poster_path": {
            "type": "string",
            "nullable": true
          },
          "credit_id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Api.TheMovieDb.Models.ActorCredits": {
        "type": "object",
        "properties": {
          "cast": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ombi.Api.TheMovieDb.Models.Cast"
            },
            "nullable": true
          },
          "crew": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ombi.Api.TheMovieDb.Models.Crew"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Core.Models.Search.V2.Music.ReleaseGroup": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Store.Entities.RequestType"
              }
            ],
            "readOnly": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "releaseDate": {
            "type": "string",
            "nullable": true
          },
          "releaseType": {
            "type": "string",
            "nullable": true
          },
          "percentOfTracks": {
            "type": "number",
            "format": "double"
          },
          "monitored": {
            "type": "boolean"
          },
          "partiallyAvailable": {
            "type": "boolean",
            "readOnly": true
          },
          "fullyAvailable": {
            "type": "boolean",
            "readOnly": true
          },
          "approved": {
            "type": "boolean"
          },
          "denied": {
            "type": "boolean",
            "nullable": true
          },
          "deniedReason": {
            "type": "string",
            "nullable": true
          },
          "requested": {
            "type": "boolean"
          },
          "requestId": {
            "type": "integer",
            "format": "int32"
          },
          "available": {
            "type": "boolean"
          },
          "plexUrl": {
            "type": "string",
            "nullable": true
          },
          "embyUrl": {
            "type": "string",
            "nullable": true
          },
          "jellyfinUrl": {
            "type": "string",
            "nullable": true
          },
          "quality": {
            "type": "string",
            "nullable": true
          },
          "imdbId": {
            "type": "string",
            "nullable": true
          },
          "theTvDbId": {
            "type": "string",
            "nullable": true
          },
          "theMovieDbId": {
            "type": "string",
            "nullable": true
          },
          "subscribed": {
            "type": "boolean"
          },
          "showSubscribe": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Core.Models.Search.V2.Music.ArtistLinks": {
        "type": "object",
        "properties": {
          "image": {
            "type": "string",
            "nullable": true
          },
          "imdb": {
            "type": "string",
            "nullable": true
          },
          "lastFm": {
            "type": "string",
            "nullable": true
          },
          "discogs": {
            "type": "string",
            "nullable": true
          },
          "allMusic": {
            "type": "string",
            "nullable": true
          },
          "homePage": {
            "type": "string",
            "nullable": true
          },
          "youTube": {
            "type": "string",
            "nullable": true
          },
          "facebook": {
            "type": "string",
            "nullable": true
          },
          "twitter": {
            "type": "string",
            "nullable": true
          },
          "bbcMusic": {
            "type": "string",
            "nullable": true
          },
          "mySpace": {
            "type": "string",
            "nullable": true
          },
          "onlineCommunity": {
            "type": "string",
            "nullable": true
          },
          "spotify": {
            "type": "string",
            "nullable": true
          },
          "instagram": {
            "type": "string",
            "nullable": true
          },
          "vk": {
            "type": "string",
            "nullable": true
          },
          "deezer": {
            "type": "string",
            "nullable": true
          },
          "google": {
            "type": "string",
            "nullable": true
          },
          "apple": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Core.Models.Search.V2.Music.BandMember": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "attributes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "isCurrentMember": {
            "type": "boolean"
          },
          "start": {
            "type": "string",
            "nullable": true
          },
          "end": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Core.Models.Search.V2.Music.ArtistInformation": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "startYear": {
            "type": "string",
            "nullable": true
          },
          "endYear": {
            "type": "string",
            "nullable": true
          },
          "isEnded": {
            "type": "boolean",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "region": {
            "type": "string",
            "nullable": true
          },
          "disambiguation": {
            "type": "string",
            "nullable": true
          },
          "banner": {
            "type": "string",
            "nullable": true
          },
          "logo": {
            "type": "string",
            "nullable": true
          },
          "poster": {
            "type": "string",
            "nullable": true
          },
          "fanArt": {
            "type": "string",
            "nullable": true
          },
          "overview": {
            "type": "string",
            "nullable": true
          },
          "releaseGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ombi.Core.Models.Search.V2.Music.ReleaseGroup"
            },
            "nullable": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Core.Models.Search.V2.Music.ArtistLinks"
              }
            ],
            "nullable": true
          },
          "members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ombi.Core.Models.Search.V2.Music.BandMember"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Core.Models.Search.V2.Music.AlbumArt": {
        "type": "object",
        "properties": {
          "image": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Api.RottenTomatoes.Models.MovieRatings": {
        "type": "object",
        "properties": {
          "critics_rating": {
            "type": "string",
            "nullable": true
          },
          "critics_score": {
            "type": "integer",
            "format": "int32"
          },
          "audience_rating": {
            "type": "string",
            "nullable": true
          },
          "audience_score": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Api.RottenTomatoes.Models.TvRatings": {
        "type": "object",
        "properties": {
          "class": {
            "type": "string",
            "nullable": true
          },
          "score": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Core.Models.Search.V2.StreamingData": {
        "type": "object",
        "properties": {
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "streamingProvider": {
            "type": "string",
            "nullable": true
          },
          "logo": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Models.SearchActorModel": {
        "type": "object",
        "properties": {
          "searchTerm": {
            "type": "string",
            "nullable": true
          },
          "languageCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Models.SearchMovieRefineModel": {
        "type": "object",
        "properties": {
          "searchTerm": {
            "type": "string",
            "nullable": true
          },
          "year": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "languageCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Models.SearchMovieExtraInfoRefineModel": {
        "type": "object",
        "properties": {
          "theMovieDbId": {
            "type": "integer",
            "format": "int32"
          },
          "languageCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Api.Lidarr.Models.Link": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Core.Models.Search.SearchArtistViewModel": {
        "type": "object",
        "properties": {
          "artistName": {
            "type": "string",
            "nullable": true
          },
          "forignArtistId": {
            "type": "string",
            "nullable": true
          },
          "overview": {
            "type": "string",
            "nullable": true
          },
          "disambiguation": {
            "type": "string",
            "nullable": true
          },
          "banner": {
            "type": "string",
            "nullable": true
          },
          "poster": {
            "type": "string",
            "nullable": true
          },
          "logo": {
            "type": "string",
            "nullable": true
          },
          "monitored": {
            "type": "boolean"
          },
          "artistType": {
            "type": "string",
            "nullable": true
          },
          "cleanName": {
            "type": "string",
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ombi.Api.Lidarr.Models.Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Core.Models.Search.SearchAlbumViewModel": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "foreignAlbumId": {
            "type": "string",
            "nullable": true
          },
          "monitored": {
            "type": "boolean"
          },
          "albumType": {
            "type": "string",
            "nullable": true
          },
          "rating": {
            "type": "number",
            "format": "double"
          },
          "releaseDate": {
            "type": "string",
            "format": "date-time"
          },
          "artistName": {
            "type": "string",
            "nullable": true
          },
          "foreignArtistId": {
            "type": "string",
            "nullable": true
          },
          "cover": {
            "type": "string",
            "nullable": true
          },
          "disk": {
            "type": "string",
            "nullable": true
          },
          "percentOfTracks": {
            "type": "number",
            "format": "double"
          },
          "genres": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false
            },
            "nullable": true
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Store.Entities.RequestType"
              }
            ],
            "readOnly": true
          },
          "partiallyAvailable": {
            "type": "boolean",
            "readOnly": true
          },
          "fullyAvailable": {
            "type": "boolean",
            "readOnly": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "approved": {
            "type": "boolean"
          },
          "denied": {
            "type": "boolean",
            "nullable": true
          },
          "deniedReason": {
            "type": "string",
            "nullable": true
          },
          "requested": {
            "type": "boolean"
          },
          "requestId": {
            "type": "integer",
            "format": "int32"
          },
          "available": {
            "type": "boolean"
          },
          "plexUrl": {
            "type": "string",
            "nullable": true
          },
          "embyUrl": {
            "type": "string",
            "nullable": true
          },
          "jellyfinUrl": {
            "type": "string",
            "nullable": true
          },
          "quality": {
            "type": "string",
            "nullable": true
          },
          "imdbId": {
            "type": "string",
            "nullable": true
          },
          "theTvDbId": {
            "type": "string",
            "nullable": true
          },
          "theMovieDbId": {
            "type": "string",
            "nullable": true
          },
          "subscribed": {
            "type": "boolean"
          },
          "showSubscribe": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Settings.Settings.Models.Branch": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "Ombi.Settings.Settings.Models.OmbiSettings": {
        "type": "object",
        "properties": {
          "baseUrl": {
            "type": "string",
            "nullable": true
          },
          "collectAnalyticData": {
            "type": "boolean"
          },
          "wizard": {
            "type": "boolean"
          },
          "apiKey": {
            "type": "string",
            "nullable": true
          },
          "doNotSendNotificationsForAutoApprove": {
            "type": "boolean"
          },
          "hideRequestsUsers": {
            "type": "boolean"
          },
          "disableHealthChecks": {
            "type": "boolean"
          },
          "defaultLanguageCode": {
            "type": "string",
            "nullable": true
          },
          "autoDeleteAvailableRequests": {
            "type": "boolean"
          },
          "autoDeleteAfterDays": {
            "type": "integer",
            "format": "int32"
          },
          "branch": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.Branch"
              }
            ]
          },
          "hasMigratedOldTvDbData": {
            "type": "boolean"
          },
          "set": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Models.AboutViewModel": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "nullable": true
          },
          "branch": {
            "type": "string",
            "nullable": true
          },
          "frameworkDescription": {
            "type": "string",
            "nullable": true
          },
          "osArchitecture": {
            "type": "string",
            "nullable": true
          },
          "osDescription": {
            "type": "string",
            "nullable": true
          },
          "processArchitecture": {
            "type": "string",
            "nullable": true
          },
          "applicationBasePath": {
            "type": "string",
            "nullable": true
          },
          "ombiDatabaseType": {
            "type": "string",
            "nullable": true
          },
          "externalDatabaseType": {
            "type": "string",
            "nullable": true
          },
          "settingsDatabaseType": {
            "type": "string",
            "nullable": true
          },
          "ombiConnectionString": {
            "type": "string",
            "nullable": true
          },
          "externalConnectionString": {
            "type": "string",
            "nullable": true
          },
          "settingsConnectionString": {
            "type": "string",
            "nullable": true
          },
          "storagePath": {
            "type": "string",
            "nullable": true
          },
          "notSupported": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Core.Settings.Models.External.PlexSettings": {
        "type": "object",
        "properties": {
          "enable": {
            "type": "boolean"
          },
          "installId": {
            "type": "string",
            "format": "uuid"
          },
          "servers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ombi.Core.Settings.Models.External.PlexServers"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Core.Settings.Models.LandingPageSettings": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "noticeEnabled": {
            "type": "boolean",
            "readOnly": true
          },
          "noticeText": {
            "type": "string",
            "nullable": true
          },
          "timeLimit": {
            "type": "boolean"
          },
          "startDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "endDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "expired": {
            "type": "boolean",
            "readOnly": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Settings.Settings.Models.CustomizationSettings": {
        "type": "object",
        "properties": {
          "applicationName": {
            "type": "string",
            "nullable": true
          },
          "applicationUrl": {
            "type": "string",
            "nullable": true
          },
          "customCss": {
            "type": "string",
            "nullable": true
          },
          "enableCustomDonations": {
            "type": "boolean"
          },
          "customDonationUrl": {
            "type": "string",
            "nullable": true
          },
          "customDonationMessage": {
            "type": "string",
            "nullable": true
          },
          "logo": {
            "type": "string",
            "nullable": true
          },
          "recentlyAddedPage": {
            "type": "boolean"
          },
          "useCustomPage": {
            "type": "boolean"
          },
          "hideAvailableFromDiscover": {
            "type": "boolean"
          },
          "favicon": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Models.PresetThemeViewModel": {
        "type": "object",
        "properties": {
          "fullName": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Settings.Settings.Models.AuthenticationSettings": {
        "type": "object",
        "properties": {
          "allowNoPassword": {
            "type": "boolean"
          },
          "requireDigit": {
            "type": "boolean"
          },
          "requiredLength": {
            "type": "integer",
            "format": "int32"
          },
          "requireLowercase": {
            "type": "boolean"
          },
          "requireNonAlphanumeric": {
            "type": "boolean"
          },
          "requireUppercase": {
            "type": "boolean"
          },
          "enableOAuth": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Settings.Settings.Models.UpdateSettings": {
        "type": "object",
        "properties": {
          "autoUpdateEnabled": {
            "type": "boolean"
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "processName": {
            "type": "string",
            "nullable": true
          },
          "useScript": {
            "type": "boolean"
          },
          "scriptLocation": {
            "type": "string",
            "nullable": true
          },
          "windowsServiceName": {
            "type": "string",
            "nullable": true
          },
          "windowsService": {
            "type": "boolean"
          },
          "testMode": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Settings.Settings.Models.UserManagementSettings": {
        "type": "object",
        "properties": {
          "importPlexAdmin": {
            "type": "boolean"
          },
          "importPlexUsers": {
            "type": "boolean"
          },
          "importEmbyUsers": {
            "type": "boolean"
          },
          "importJellyfinUsers": {
            "type": "boolean"
          },
          "movieRequestLimit": {
            "type": "integer",
            "format": "int32"
          },
          "movieRequestLimitType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Store.Entities.RequestLimitType"
              }
            ]
          },
          "episodeRequestLimit": {
            "type": "integer",
            "format": "int32"
          },
          "episodeRequestLimitType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Store.Entities.RequestLimitType"
              }
            ]
          },
          "musicRequestLimit": {
            "type": "integer",
            "format": "int32"
          },
          "musicRequestLimitType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Store.Entities.RequestLimitType"
              }
            ]
          },
          "defaultStreamingCountry": {
            "type": "string",
            "nullable": true
          },
          "defaultRoles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "bannedPlexUserIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "bannedEmbyUserIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "bannedJellyfinUserIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Settings.Settings.Models.External.DogNzbSettings": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "apiKey": {
            "type": "string",
            "nullable": true
          },
          "movies": {
            "type": "boolean"
          },
          "tvShows": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Settings.Settings.Models.External.DropDownModel": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "nullable": true
          },
          "display": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Settings.Settings.Models.External.SickRageSettings": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "apiKey": {
            "type": "string",
            "nullable": true
          },
          "qualityProfile": {
            "type": "string",
            "nullable": true
          },
          "qualities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.External.DropDownModel"
            },
            "nullable": true,
            "readOnly": true
          },
          "ssl": {
            "type": "boolean"
          },
          "subDir": {
            "type": "string",
            "nullable": true
          },
          "ip": {
            "type": "string",
            "nullable": true
          },
          "port": {
            "type": "integer",
            "format": "int32"
          },
          "fullUri": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Settings.Settings.Models.JobSettings": {
        "type": "object",
        "properties": {
          "embyContentSync": {
            "type": "string",
            "nullable": true
          },
          "embyRecentlyAddedSync": {
            "type": "string",
            "nullable": true
          },
          "jellyfinContentSync": {
            "type": "string",
            "nullable": true
          },
          "sonarrSync": {
            "type": "string",
            "nullable": true
          },
          "radarrSync": {
            "type": "string",
            "nullable": true
          },
          "plexContentSync": {
            "type": "string",
            "nullable": true
          },
          "plexRecentlyAddedSync": {
            "type": "string",
            "nullable": true
          },
          "couchPotatoSync": {
            "type": "string",
            "nullable": true
          },
          "automaticUpdater": {
            "type": "string",
            "nullable": true
          },
          "userImporter": {
            "type": "string",
            "nullable": true
          },
          "sickRageSync": {
            "type": "string",
            "nullable": true
          },
          "newsletter": {
            "type": "string",
            "nullable": true
          },
          "lidarrArtistSync": {
            "type": "string",
            "nullable": true
          },
          "issuesPurge": {
            "type": "string",
            "nullable": true
          },
          "retryRequests": {
            "type": "string",
            "nullable": true
          },
          "mediaDatabaseRefresh": {
            "type": "string",
            "nullable": true
          },
          "autoDeleteRequests": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Models.JobSettingsViewModel": {
        "type": "object",
        "properties": {
          "result": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Models.CronViewModelBody": {
        "type": "object",
        "properties": {
          "expression": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Models.CronTestModel": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Settings.Settings.Models.IssueSettings": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "enableInProgress": {
            "type": "boolean"
          },
          "deleteIssues": {
            "type": "boolean"
          },
          "daysAfterResolvedToDelete": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Settings.Settings.Models.VoteSettings": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "movieVoteMax": {
            "type": "integer",
            "format": "int32"
          },
          "musicVoteMax": {
            "type": "integer",
            "format": "int32"
          },
          "tvShowVoteMax": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Core.Settings.Models.External.TheMovieDbSettings": {
        "type": "object",
        "properties": {
          "showAdultMovies": {
            "type": "boolean"
          },
          "excludedKeywordIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "excludedMovieGenreIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "excludedTvGenreIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Helpers.NotificationType": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12
        ],
        "type": "integer",
        "format": "int32"
      },
      "Ombi.Store.Entities.NotificationTemplates": {
        "type": "object",
        "properties": {
          "notificationType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Helpers.NotificationType"
              }
            ]
          },
          "agent": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Helpers.NotificationAgent"
              }
            ]
          },
          "subject": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "enabled": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Core.Models.UI.EmailNotificationsViewModel": {
        "type": "object",
        "properties": {
          "notificationTemplates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ombi.Store.Entities.NotificationTemplates"
            },
            "nullable": true
          },
          "enabled": {
            "type": "boolean"
          },
          "host": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "port": {
            "type": "integer",
            "format": "int32"
          },
          "senderName": {
            "type": "string",
            "nullable": true
          },
          "senderAddress": {
            "type": "string",
            "nullable": true
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "authentication": {
            "type": "boolean"
          },
          "adminEmail": {
            "type": "string",
            "nullable": true
          },
          "disableTLS": {
            "type": "boolean"
          },
          "disableCertificateChecking": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Core.Models.UI.DiscordNotificationsViewModel": {
        "type": "object",
        "properties": {
          "notificationTemplates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ombi.Store.Entities.NotificationTemplates"
            },
            "nullable": true
          },
          "enabled": {
            "type": "boolean"
          },
          "webhookUrl": {
            "type": "string",
            "nullable": true
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "icon": {
            "type": "string",
            "nullable": true
          },
          "hideUser": {
            "type": "boolean"
          },
          "webHookId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "token": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Core.Models.UI.TelegramNotificationsViewModel": {
        "type": "object",
        "properties": {
          "notificationTemplates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ombi.Store.Entities.NotificationTemplates"
            },
            "nullable": true
          },
          "enabled": {
            "type": "boolean"
          },
          "botApi": {
            "type": "string",
            "nullable": true
          },
          "chatId": {
            "type": "string",
            "nullable": true
          },
          "parseMode": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Core.Models.UI.PushbulletNotificationViewModel": {
        "type": "object",
        "properties": {
          "notificationTemplates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ombi.Store.Entities.NotificationTemplates"
            },
            "nullable": true
          },
          "enabled": {
            "type": "boolean"
          },
          "accessToken": {
            "type": "string",
            "nullable": true
          },
          "channelTag": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Core.Models.UI.PushoverNotificationViewModel": {
        "type": "object",
        "properties": {
          "notificationTemplates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ombi.Store.Entities.NotificationTemplates"
            },
            "nullable": true
          },
          "enabled": {
            "type": "boolean"
          },
          "accessToken": {
            "type": "string",
            "nullable": true
          },
          "userToken": {
            "type": "string",
            "nullable": true
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "sound": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Core.Models.UI.SlackNotificationsViewModel": {
        "type": "object",
        "properties": {
          "notificationTemplates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ombi.Store.Entities.NotificationTemplates"
            },
            "nullable": true
          },
          "enabled": {
            "type": "boolean"
          },
          "webhookUrl": {
            "type": "string",
            "nullable": true
          },
          "channel": {
            "type": "string",
            "nullable": true
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "iconEmoji": {
            "type": "string",
            "nullable": true
          },
          "iconUrl": {
            "type": "string",
            "nullable": true
          },
          "team": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "service": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "token": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Core.Models.UI.MattermostNotificationsViewModel": {
        "type": "object",
        "properties": {
          "notificationTemplates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ombi.Store.Entities.NotificationTemplates"
            },
            "nullable": true
          },
          "webhookUrl": {
            "type": "string",
            "nullable": true
          },
          "channel": {
            "type": "string",
            "nullable": true
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "iconUrl": {
            "type": "string",
            "nullable": true
          },
          "enabled": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Core.Models.UI.WhatsAppSettingsViewModel": {
        "type": "object",
        "properties": {
          "notificationTemplates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ombi.Store.Entities.NotificationTemplates"
            },
            "nullable": true
          },
          "enabled": {
            "type": "boolean"
          },
          "from": {
            "type": "string",
            "nullable": true
          },
          "accountSid": {
            "type": "string",
            "nullable": true
          },
          "authToken": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Core.Models.UI.TwilioSettingsViewModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "whatsAppSettings": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Core.Models.UI.WhatsAppSettingsViewModel"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Core.Models.UI.MobileNotificationsViewModel": {
        "type": "object",
        "properties": {
          "notificationTemplates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ombi.Store.Entities.NotificationTemplates"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Core.Models.UI.GotifyNotificationViewModel": {
        "type": "object",
        "properties": {
          "notificationTemplates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ombi.Store.Entities.NotificationTemplates"
            },
            "nullable": true
          },
          "enabled": {
            "type": "boolean"
          },
          "baseUrl": {
            "type": "string",
            "nullable": true
          },
          "applicationToken": {
            "type": "string",
            "nullable": true
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Core.Models.UI.WebhookNotificationViewModel": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "webhookUrl": {
            "type": "string",
            "nullable": true
          },
          "applicationToken": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Core.Models.UI.NewsletterNotificationViewModel": {
        "type": "object",
        "properties": {
          "notificationTemplate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Store.Entities.NotificationTemplates"
              }
            ],
            "nullable": true
          },
          "disableTv": {
            "type": "boolean"
          },
          "disableMovies": {
            "type": "boolean"
          },
          "disableMusic": {
            "type": "boolean"
          },
          "enabled": {
            "type": "boolean"
          },
          "externalEmails": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Api.Sonarr.Models.Cutoff": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Api.Sonarr.Models.Quality": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Api.Sonarr.Models.Item": {
        "type": "object",
        "properties": {
          "quality": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Api.Sonarr.Models.Quality"
              }
            ],
            "nullable": true
          },
          "allowed": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Api.Sonarr.Models.SonarrProfile": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "cutoff": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Api.Sonarr.Models.Cutoff"
              }
            ],
            "nullable": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ombi.Api.Sonarr.Models.Item"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Api.Sonarr.Models.SonarrRootFolder": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "freespace": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Api.Sonarr.Models.V3.Cutoff": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Api.Sonarr.Models.V3.Language": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Api.Sonarr.Models.V3.Languages": {
        "type": "object",
        "properties": {
          "languages": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Api.Sonarr.Models.V3.Language"
              }
            ],
            "nullable": true
          },
          "allowed": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Api.Sonarr.Models.V3.LanguageProfiles": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "upgradeAllowed": {
            "type": "boolean"
          },
          "cutoff": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Api.Sonarr.Models.V3.Cutoff"
              }
            ],
            "nullable": true
          },
          "languages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ombi.Api.Sonarr.Models.V3.Languages"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Api.Sonarr.Models.Tag": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "label": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Core.Engine.SummaryRequest": {
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "format": "date-time"
          },
          "to": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Core.Engine.UserStatsSummary": {
        "type": "object",
        "properties": {
          "totalRequests": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "totalMovieRequests": {
            "type": "integer",
            "format": "int32"
          },
          "totalTvRequests": {
            "type": "integer",
            "format": "int32"
          },
          "totalIssues": {
            "type": "integer",
            "format": "int32"
          },
          "completedRequestsMovies": {
            "type": "integer",
            "format": "int32"
          },
          "completedRequestsTv": {
            "type": "integer",
            "format": "int32"
          },
          "completedRequests": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "mostRequestedUserMovie": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Store.Entities.OmbiUser"
              }
            ],
            "nullable": true
          },
          "mostRequestedUserTv": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Store.Entities.OmbiUser"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "System.Net.HttpStatusCode": {
        "enum": [
          100,
          101,
          102,
          103,
          200,
          201,
          202,
          203,
          204,
          205,
          206,
          207,
          208,
          226,
          300,
          300,
          301,
          301,
          302,
          302,
          303,
          303,
          304,
          305,
          306,
          307,
          307,
          308,
          400,
          401,
          402,
          403,
          404,
          405,
          406,
          407,
          408,
          409,
          410,
          411,
          412,
          413,
          414,
          415,
          416,
          417,
          421,
          422,
          423,
          424,
          426,
          428,
          429,
          431,
          451,
          500,
          501,
          502,
          503,
          504,
          505,
          506,
          507,
          508,
          510,
          511
        ],
        "type": "integer",
        "format": "int32"
      },
      "Ombi.Settings.Settings.Models.Notifications.DiscordNotificationSettings": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "webhookUrl": {
            "type": "string",
            "nullable": true
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "icon": {
            "type": "string",
            "nullable": true
          },
          "hideUser": {
            "type": "boolean"
          },
          "webHookId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "token": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Settings.Settings.Models.Notifications.PushbulletSettings": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "accessToken": {
            "type": "string",
            "nullable": true
          },
          "channelTag": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Settings.Settings.Models.Notifications.PushoverSettings": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "accessToken": {
            "type": "string",
            "nullable": true
          },
          "userToken": {
            "type": "string",
            "nullable": true
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "sound": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Settings.Settings.Models.Notifications.GotifySettings": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "baseUrl": {
            "type": "string",
            "nullable": true
          },
          "applicationToken": {
            "type": "string",
            "nullable": true
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Settings.Settings.Models.Notifications.WebhookSettings": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "webhookUrl": {
            "type": "string",
            "nullable": true
          },
          "applicationToken": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Settings.Settings.Models.Notifications.MattermostNotificationSettings": {
        "type": "object",
        "properties": {
          "webhookUrl": {
            "type": "string",
            "nullable": true
          },
          "channel": {
            "type": "string",
            "nullable": true
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "iconUrl": {
            "type": "string",
            "nullable": true
          },
          "enabled": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Settings.Settings.Models.Notifications.SlackNotificationSettings": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "webhookUrl": {
            "type": "string",
            "nullable": true
          },
          "channel": {
            "type": "string",
            "nullable": true
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "iconEmoji": {
            "type": "string",
            "nullable": true
          },
          "iconUrl": {
            "type": "string",
            "nullable": true
          },
          "team": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "service": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "token": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Settings.Settings.Models.Notifications.EmailNotificationSettings": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "host": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "port": {
            "type": "integer",
            "format": "int32"
          },
          "senderName": {
            "type": "string",
            "nullable": true
          },
          "senderAddress": {
            "type": "string",
            "nullable": true
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "authentication": {
            "type": "boolean"
          },
          "adminEmail": {
            "type": "string",
            "nullable": true
          },
          "disableTLS": {
            "type": "boolean"
          },
          "disableCertificateChecking": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Core.Models.TesterResultModel": {
        "type": "object",
        "properties": {
          "isValid": {
            "type": "boolean"
          },
          "expectedSubDir": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Settings.Settings.Models.Notifications.TelegramSettings": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "botApi": {
            "type": "string",
            "nullable": true
          },
          "chatId": {
            "type": "string",
            "nullable": true
          },
          "parseMode": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Settings.Settings.Models.Notifications.MobileNotificationSettings": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Ombi.Models.MobileNotificationTestViewModel": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "nullable": true
          },
          "settings": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Settings.Settings.Models.Notifications.MobileNotificationSettings"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Api.TheMovieDb.Models.TheMovidDbKeyValue": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.TheMovieDbApi.Models.Genre": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Api.TheMovieDb.Models.WatchProvidersResults": {
        "type": "object",
        "properties": {
          "provider_id": {
            "type": "integer",
            "format": "int32"
          },
          "logo_path": {
            "type": "string",
            "nullable": true
          },
          "provider_name": {
            "type": "string",
            "nullable": true
          },
          "origin_country": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Models.UserAuthModel": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "rememberMe": {
            "type": "boolean"
          },
          "usePlexAdminAccount": {
            "type": "boolean"
          },
          "usePlexOAuth": {
            "type": "boolean"
          },
          "plexTvPin": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Api.Plex.Models.OAuth.OAuthPin"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Models.External.PlexTokenAuthentication": {
        "type": "object",
        "properties": {
          "plexToken": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Controllers.V1.TokenController+TokenRefresh": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "nullable": true
          },
          "userename": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Schedule.Processor.Downloads": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Core.Processor.UpdateModel": {
        "type": "object",
        "properties": {
          "updateVersionString": {
            "type": "string",
            "nullable": true
          },
          "updateVersion": {
            "type": "integer",
            "format": "int32"
          },
          "updateDate": {
            "type": "string",
            "format": "date-time"
          },
          "updateAvailable": {
            "type": "boolean"
          },
          "changeLogs": {
            "type": "string",
            "nullable": true
          },
          "downloads": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ombi.Schedule.Processor.Downloads"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Store.Entities.VoteType": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "Ombi.Core.Models.UI.VoteViewModel": {
        "type": "object",
        "properties": {
          "requestId": {
            "type": "integer",
            "format": "int32"
          },
          "requestType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Store.Entities.RequestType"
              }
            ]
          },
          "image": {
            "type": "string",
            "nullable": true
          },
          "background": {
            "type": "string",
            "nullable": true
          },
          "upvotes": {
            "type": "integer",
            "format": "int32"
          },
          "downvotes": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "alreadyVoted": {
            "type": "boolean"
          },
          "myVote": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Store.Entities.VoteType"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "Ombi.Core.Models.VoteEngineResult": {
        "type": "object",
        "properties": {
          "result": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "isError": {
            "type": "boolean",
            "readOnly": true
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ombi.Store.Entities.Votes": {
        "type": "object",
        "properties": {
          "requestId": {
            "type": "integer",
            "format": "int32"
          },
          "voteType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Store.Entities.VoteType"
              }
            ]
          },
          "requestType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Store.Entities.RequestType"
              }
            ]
          },
          "userId": {
            "type": "string",
            "nullable": true
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "user": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ombi.Store.Entities.OmbiUser"
              }
            ],
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "ApiKey": {
        "type": "apiKey",
        "description": "API Key provided by Ombi. Example: \"ApiKey: {token}\"",
        "name": "ApiKey",
        "in": "header"
      }
    }
  }
}